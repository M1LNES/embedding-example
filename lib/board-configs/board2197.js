const board2197 = {
	widgets: [
		{
			id: 35921,
			board_id: 2197,
			type: 'vision',
			layout: {
				h: 5,
				w: 1,
				x: 0,
				y: 6,
			},
			requests:
				'[\n\t{\n\t\t"path": "/2/dev~omni-api/crossplatform/raw",\n\t\t"payload": {\n\t\t\t"accountId": ${string:acl_account_id},\n\t\t\t"userId": ${string:user_acl_id},\n\t\t\t"options": {\n\t\t\t\t"auth": true,\n\t\t\t\t"output": [\n\t\t\t\t\t"data",\n\t\t\t\t\t"raw",\n\t\t\t\t\t"payload",\n\t\t\t\t\t"query",\n\t\t\t\t],\n\t\t\t\t"explain": true,\n\t\t\t},\n\t\t\t"target": [\n\t\t\t\t{\n\t\t\t\t\t"metric": "interactions",\n\t\t\t\t\t"aggregation": "avg",\n\t\t\t\t},\n\t\t\t],\n\t\t\t"filters": [\n\t\t\t\t{\n\t\t\t\t\t"created_time": {\n\t\t\t\t\t\t"timeFrom": ${daterange:daterange|start|zone("utc", true)},\n\t\t\t\t\t\t"timeTo": ${daterange:daterange|end|zone("utc", true)|minus("second", 1)|endOf("day")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"profile_id": {\n\t\t\t\t\t\t"values": ${array:fbProfiles|expr("input.map((p) => {if (typeof p !== \'string\') return p; const [network, value] = p.split(\'-\'); return {network, value};}).map(({value, network}) => ({id: value, platform: network}))")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"origin": {\n\t\t\t\t\t\t"values": [\n\t\t\t\t\t\t\t"outgoing",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"spam_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"deleted_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\t"dimensions": [],\n\t\t},\n\t},\n\t{\n\t\t"path": "/2/dev~omni-api/crossplatform/raw",\n\t\t"payload": {\n\t\t\t"accountId": ${string:acl_account_id},\n\t\t\t"userId": ${string:user_acl_id},\n\t\t\t"options": {\n\t\t\t\t"auth": true,\n\t\t\t\t"output": [\n\t\t\t\t\t"data",\n\t\t\t\t\t"raw",\n\t\t\t\t\t"payload",\n\t\t\t\t\t"query",\n\t\t\t\t],\n\t\t\t\t"explain": true,\n\t\t\t},\n\t\t\t\t\t\t// Request\n"target": [\n\t\t\t\t{\n\t\t\t\t\t"metric": "interactions",\n\t\t\t\t\t"aggregation": "avg",\n\t\t\t\t},\n\t\t\t],\n\t\t\t"filters": [\n\t\t\t\t{\n\t\t\t\t\t"created_time": {\n\t\t\t\t\t\t"timeFrom": ${daterange:daterange|previousSuite|start|zone("utc", true)},\n\t\t\t\t\t\t"timeTo": ${daterange:daterange|previousSuite|end|zone("utc", true)|minus("second", 1)|endOf("day")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"profile_id": {\n\t\t\t\t\t\t"values": ${array:fbProfiles|expr("input.map((p) => {if (typeof p !== \'string\') return p; const [network, value] = p.split(\'-\'); return {network, value};}).map(({value, network}) => ({id: value, platform: network}))")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"origin": {\n\t\t\t\t\t\t"values": [\n\t\t\t\t\t\t\t"outgoing",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"spam_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"deleted_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\t"dimensions": [],\n\t\t},\n\t},\n]',
			config:
				'{\n\t"hammer": {\n\t\t"type": "value_change",\n\t\t"config": {\n\t\t\t"title": "Average interactions per content piece",\n\t\t\t"daterange": "daterange",\n\t\t\t"metric": {\n\t\t\t\t"name": "Average interactions per post",\n\t\t\t\t"shouldTrendDecrease": false,\n\t\t\t},\n\t\t\t"interactivity": {\n\t\t\t\t"openAdditionalBoard": {\n\t\t\t\t\t"boardId": "{{global.boards.fbContent}}",\n\t\t\t\t\t"variant": "narrow",\n\t\t\t\t\t"parameter_sort": {\n\t\t\t\t\t\t"expr": "{\\"type\\": \\"reach\\", \\"order\\": \\"desc\\"}",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t"tooltip": "The sum of lifetime interactions (reactions, comments, and shares) received by posts published during the selected date range, divided by the number of posts from the same period",\n\t\t\t"badges": [\n\t\t\t\t{\n\t\t\t\t\t"title": "Post Level",\n\t\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t},\n\t"header": {\n\t\t"title": "Average interactions per content piece",\n\t\t"subtitle": ${daterange:daterange|humanize},\n\t\t"tooltip": "The sum of lifetime interactions (reactions, comments, and shares) received by posts published during the selected date range, divided by the number of posts from the same period",\n\t\t"badges": [\n\t\t\t{\n\t\t\t\t"title": "Post Level",\n\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t},\n\t\t],\n\t},\n\t"container": {\n\t\t"padding": "0px",\n\t\t"visionPadding": "12px",\n\t},\n\t"vision": {\n\t\t"data": [\n\t\t\t{\n\t\t\t\t"name": "current",\n\t\t\t\t"path": [\n\t\t\t\t\t0,\n\t\t\t\t],\n\t\t\t\t"format": "omni-full",\n\t\t\t\t"source": "$input",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "previous",\n\t\t\t\t"path": [\n\t\t\t\t\t1,\n\t\t\t\t],\n\t\t\t\t"format": "omni-full",\n\t\t\t\t"source": "$input",\n\t\t\t},\n\t\t],\n\t\t"formats": [\n\t\t\t{\n\t\t\t\t"name": "value",\n\t\t\t\t"type": "expr",\n\t\t\t\t"expr": "(isNaN(value) || value === null) ? \'N/A\' : ( value < 1000000 ? ((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \') : (new Intl.NumberFormat(\'en-US\', {notation: \'compact\',maximumFractionDigits: 2})).format(value))",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "expr",\n\t\t\t\t"name": "percentage",\n\t\t\t\t"expr": "(isNaN(value) || value === null) ? \'N/A\' : (new Intl.NumberFormat(\'en-US\', {notation: \'compact\', maximumFractionDigits: 2, signDisplay: \'exceptZero\', style: \'percent\'})).format(value)",\n\t\t\t},\n\t\t],\n\t\t"scales": [\n\t\t\t{\n\t\t\t\t"type": "threshold",\n\t\t\t\t"name": "color",\n\t\t\t\t"domain": [\n\t\t\t\t\t0,\n\t\t\t\t],\n\t\t\t\t"range": [\n\t\t\t\t\t"#DA1E28",\n\t\t\t\t\t"#24A148",\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\t"marks": [\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"on": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"event": "click",\n\t\t\t\t\t\t"fire": "openAdditionalBoard",\n\t\t\t\t\t\t"args": {\n\t\t\t\t\t\t\t"boardId": 934,\n\t\t\t\t\t\t\t"variant": "narrow",\n\t\t\t\t\t\t\t"parameter_sort": {\n\t\t\t\t\t\t\t\t"expr": "{\\"type\\": \\"reach\\", \\"order\\": \\"desc\\"}",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"name": "Current Value",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "current",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"fontSize": 36,\n\t\t\t\t\t"fill": "#444",\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "value",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "end",\n\t\t\t\t\t"fontWeight": "medium",\n\t\t\t\t\t"anchorX": "middle",\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "(signal(\'layout.top\') + signal(\'layout.height\') / 2 ) - 15",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"expr": "signal(\'container.width\') / 2",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Relative Change Value",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "previous",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "signal(\'layout.top\') +  ( signal(\'layout.height\') / 2 ) + 30",\n\t\t\t\t\t},\n\t\t\t\t\t"fill": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"expr": "dataset(\'current\')[index].value === null || datum.value === 0 || datum.value === null ? \'black\' :scale(\'color\', ((dataset(\'current\')[index].value - datum.value) / Math.abs(datum.value)))",\n\t\t\t\t\t},\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "percentage",\n\t\t\t\t\t\t"expr": "dataset(\'current\')[index].value === null || datum.value === 0 || datum.value === null ? \'N/A\' : ((dataset(\'current\')[index].value - datum.value) / Math.abs(datum.value))",\n\t\t\t\t\t},\n\t\t\t\t\t"fontSize": 14,\n\t\t\t\t\t"fontWeight": "bold",\n\t\t\t\t\t"anchorX": {\n\t\t\t\t\t\t"expr": "signal(\'container.width\') > 300 ? \'end\' : \'middle\'",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "middle",\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"expr": "(signal(\'container.width\') / 2) - (signal(\'container.width\') > 300 ? 45 : 0)",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Relative Change Text",\n\t\t\t\t"encode": {\n\t\t\t\t\t"text": `${daterange:daterange|previousSuite|start|format("DD")|prepend("vs ")} - ${daterange:daterange|previousSuite|end|minus("second", 1)|format("DD")}`,\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"expr": "(signal(\'container.width\') / 2) - (signal(\'container.width\') > 300 ? 40 : 0)",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorX": {\n\t\t\t\t\t\t"expr": "signal(\'container.width\') > 300 ? \'start\' : \'middle\'",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "middle",\n\t\t\t\t\t"fontSize": 11,\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "signal(\'layout.top\') +  ( signal(\'layout.height\') / 2 ) + (signal(\'container.width\') > 300 ? 30 : 50) ",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "MetricName",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "current",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"fontSize": 11,\n\t\t\t\t\t"fill": "#757575",\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"signal": "container.width",\n\t\t\t\t\t\t"mult": 0.5,\n\t\t\t\t\t},\n\t\t\t\t\t"anchorX": "middle",\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "(signal(\'layout.top\') + signal(\'layout.height\') / 2) + 5",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "end",\n\t\t\t\t\t"text": "Average interactions per post",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			created_at: '2023-11-06T11:42:44.417Z',
			deleted_at: null,
			updated_at: '2023-11-23T12:05:24.177Z',
		},
		{
			id: 35925,
			board_id: 2197,
			type: 'vision',
			layout: {
				h: 5,
				w: 1,
				x: 0,
				y: 11,
			},
			requests:
				'[\n\t{\n\t\t"path": "/2/dev~omni-api/crossplatform/raw",\n\t\t"payload": {\n\t\t\t"accountId": ${string:acl_account_id},\n\t\t\t"userId": ${string:user_acl_id},\n\t\t\t"options": {\n\t\t\t\t"auth": true,\n\t\t\t\t"output": [\n\t\t\t\t\t"data",\n\t\t\t\t\t"raw",\n\t\t\t\t\t"payload",\n\t\t\t\t\t"query",\n\t\t\t\t],\n\t\t\t\t"explain": true,\n\t\t\t},\n\t\t\t\t\t\t// Request\n"target": [\n\t\t\t\t{\n\t\t\t\t\t"metric": "insights_reach_per_content",\n\t\t\t\t\t"aggregation": "avg",\n\t\t\t\t},\n\t\t\t],\n\t\t\t"filters": [\n\t\t\t\t{\n\t\t\t\t\t"created_time": {\n\t\t\t\t\t\t"timeFrom": ${daterange:daterange|start|zone("utc", true)},\n\t\t\t\t\t\t"timeTo": ${daterange:daterange|end|zone("utc", true)|minus("second", 1)|endOf("day")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"profile_id": {\n\t\t\t\t\t\t"values": ${array:fbProfiles|expr("input.map((p) => {if (typeof p !== \'string\') return p; const [network, value] = p.split(\'-\'); return {network, value};}).map(({value, network}) => ({id: value, platform: network}))")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"origin": {\n\t\t\t\t\t\t"values": [\n\t\t\t\t\t\t\t"outgoing",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"spam_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"deleted_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\t"dimensions": [],\n\t\t},\n\t},\n\t{\n\t\t"path": "/2/dev~omni-api/crossplatform/raw",\n\t\t"payload": {\n\t\t\t"accountId": ${string:acl_account_id},\n\t\t\t"userId": ${string:user_acl_id},\n\t\t\t"options": {\n\t\t\t\t"auth": true,\n\t\t\t\t"output": [\n\t\t\t\t\t"data",\n\t\t\t\t\t"raw",\n\t\t\t\t\t"payload",\n\t\t\t\t\t"query",\n\t\t\t\t],\n\t\t\t\t"explain": true,\n\t\t\t},\n\t\t\t\t\t\t// Request\n"target": [\n\t\t\t\t{\n\t\t\t\t\t"metric": "insights_reach_per_content",\n\t\t\t\t\t"aggregation": "avg",\n\t\t\t\t},\n\t\t\t],\n\t\t\t"filters": [\n\t\t\t\t{\n\t\t\t\t\t"created_time": {\n\t\t\t\t\t\t"timeFrom": ${daterange:daterange|previousSuite|start|zone("utc", true)},\n\t\t\t\t\t\t"timeTo": ${daterange:daterange|previousSuite|end|zone("utc", true)|minus("second", 1)|endOf("day")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"profile_id": {\n\t\t\t\t\t\t"values": ${array:fbProfiles|expr("input.map((p) => {if (typeof p !== \'string\') return p; const [network, value] = p.split(\'-\'); return {network, value};}).map(({value, network}) => ({id: value, platform: network}))")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"origin": {\n\t\t\t\t\t\t"values": [\n\t\t\t\t\t\t\t"outgoing",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"spam_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"deleted_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\t"dimensions": [],\n\t\t},\n\t},\n]',
			config:
				'{\n\t"hammer": {\n\t\t"type": "value_change",\n\t\t"config": {\n\t\t\t"title": "Average reach per content piece",\n\t\t\t"daterange": "daterange",\n\t\t\t"metric": {\n\t\t\t\t"name": "Average reach per post",\n\t\t\t\t"shouldTrendDecrease": false,\n\t\t\t},\n\t\t\t"interactivity": {\n\t\t\t\t"openAdditionalBoard": {\n\t\t\t\t\t"boardId": "{{global.boards.fbContent}}",\n\t\t\t\t\t"variant": "narrow",\n\t\t\t\t\t"parameter_sort": {\n\t\t\t\t\t\t"expr": "{\\"type\\": \\"reach\\", \\"order\\": \\"desc\\"}",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t"tooltip": "The sum of lifetime reach for every post published during the selected date range, divided by the number of posts from the same period",\n\t\t\t"badges": [\n\t\t\t\t{\n\t\t\t\t\t"title": "Post Level",\n\t\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t},\n\t"header": {\n\t\t"title": "Average reach per content piece",\n\t\t"subtitle": ${daterange:daterange|humanize},\n\t\t"tooltip": "The sum of lifetime reach for every post published during the selected date range, divided by the number of posts from the same period",\n\t\t"badges": [\n\t\t\t{\n\t\t\t\t"title": "Post Level",\n\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t},\n\t\t],\n\t},\n\t"container": {\n\t\t"padding": "0px",\n\t\t"visionPadding": "12px",\n\t},\n\t"vision": {\n\t\t"data": [\n\t\t\t{\n\t\t\t\t"name": "current",\n\t\t\t\t"path": [\n\t\t\t\t\t0,\n\t\t\t\t],\n\t\t\t\t"format": "omni-full",\n\t\t\t\t"source": "$input",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "previous",\n\t\t\t\t"path": [\n\t\t\t\t\t1,\n\t\t\t\t],\n\t\t\t\t"format": "omni-full",\n\t\t\t\t"source": "$input",\n\t\t\t},\n\t\t],\n\t\t"formats": [\n\t\t\t{\n\t\t\t\t"name": "value",\n\t\t\t\t"type": "expr",\n\t\t\t\t"expr": "(isNaN(value) || value === null) ? \'N/A\' : ( value < 1000000 ? ((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \') : (new Intl.NumberFormat(\'en-US\', {notation: \'compact\',maximumFractionDigits: 2})).format(value))",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "expr",\n\t\t\t\t"name": "percentage",\n\t\t\t\t"expr": "(isNaN(value) || value === null) ? \'N/A\' : (new Intl.NumberFormat(\'en-US\', {notation: \'compact\', maximumFractionDigits: 2, signDisplay: \'exceptZero\', style: \'percent\'})).format(value)",\n\t\t\t},\n\t\t],\n\t\t"scales": [\n\t\t\t{\n\t\t\t\t"type": "threshold",\n\t\t\t\t"name": "color",\n\t\t\t\t"domain": [\n\t\t\t\t\t0,\n\t\t\t\t],\n\t\t\t\t"range": [\n\t\t\t\t\t"#DA1E28",\n\t\t\t\t\t"#24A148",\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\t"marks": [\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"on": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"event": "click",\n\t\t\t\t\t\t"fire": "openAdditionalBoard",\n\t\t\t\t\t\t"args": {\n\t\t\t\t\t\t\t"boardId": 934,\n\t\t\t\t\t\t\t"variant": "narrow",\n\t\t\t\t\t\t\t"parameter_sort": {\n\t\t\t\t\t\t\t\t"expr": "{\\"type\\": \\"reach\\", \\"order\\": \\"desc\\"}",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"name": "Current Value",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "current",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"fontSize": 36,\n\t\t\t\t\t"fill": "#444",\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "value",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "end",\n\t\t\t\t\t"fontWeight": "medium",\n\t\t\t\t\t"anchorX": "middle",\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "(signal(\'layout.top\') + signal(\'layout.height\') / 2 ) - 15",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"expr": "signal(\'container.width\') / 2",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Relative Change Value",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "previous",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "signal(\'layout.top\') +  ( signal(\'layout.height\') / 2 ) + 30",\n\t\t\t\t\t},\n\t\t\t\t\t"fill": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"expr": "dataset(\'current\')[index].value === null || datum.value === 0 || datum.value === null ? \'black\' :scale(\'color\', ((dataset(\'current\')[index].value - datum.value) / Math.abs(datum.value)))",\n\t\t\t\t\t},\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "percentage",\n\t\t\t\t\t\t"expr": "dataset(\'current\')[index].value === null || datum.value === 0 || datum.value === null ? \'N/A\' : ((dataset(\'current\')[index].value - datum.value) / Math.abs(datum.value))",\n\t\t\t\t\t},\n\t\t\t\t\t"fontSize": 14,\n\t\t\t\t\t"fontWeight": "bold",\n\t\t\t\t\t"anchorX": {\n\t\t\t\t\t\t"expr": "signal(\'container.width\') > 300 ? \'end\' : \'middle\'",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "middle",\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"expr": "(signal(\'container.width\') / 2) - (signal(\'container.width\') > 300 ? 45 : 0)",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Relative Change Text",\n\t\t\t\t"encode": {\n\t\t\t\t\t"text": `${daterange:daterange|previousSuite|start|format("DD")|prepend("vs ")} - ${daterange:daterange|previousSuite|end|minus("second", 1)|format("DD")}`,\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"expr": "(signal(\'container.width\') / 2) - (signal(\'container.width\') > 300 ? 40 : 0)",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorX": {\n\t\t\t\t\t\t"expr": "signal(\'container.width\') > 300 ? \'start\' : \'middle\'",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "middle",\n\t\t\t\t\t"fontSize": 11,\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "signal(\'layout.top\') +  ( signal(\'layout.height\') / 2 ) + (signal(\'container.width\') > 300 ? 30 : 50) ",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "MetricName",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "current",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"fontSize": 11,\n\t\t\t\t\t"fill": "#757575",\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"signal": "container.width",\n\t\t\t\t\t\t"mult": 0.5,\n\t\t\t\t\t},\n\t\t\t\t\t"anchorX": "middle",\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "(signal(\'layout.top\') + signal(\'layout.height\') / 2) + 5",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "end",\n\t\t\t\t\t"text": "Average reach per post",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			created_at: '2023-11-06T11:42:44.417Z',
			deleted_at: null,
			updated_at: '2023-11-23T10:07:05.672Z',
		},
		{
			id: 35910,
			board_id: 2197,
			type: 'field',
			layout: {
				h: 1,
				w: 3,
				x: 0,
				y: 0,
			},
			requests:
				'{\n\t"path": "/0/dev~omni-graph/resolve",\n\t"payload": {\n\t\t"query": "query ($auth: Auth!, $ids: [String]) { fbProfiles (auth: $auth, ids: $ids, tags: [\\"insights:valid\\"]) { value: id, title: name, picture, link, network, screenName } }",\n\t\t"variables": {\n\t\t\t"auth": {\n\t\t\t\t"userId": ${string:user_acl_id},\n\t\t\t\t"accountId": ${string:acl_account_id}\n\t\t\t}\n\t\t}\n\t}\n}',
			config:
				'{\n\t"name": "fbProfiles",\n\t"type": "list",\n\t"groupId": "main-bar-datasource",\n\t"tags": [\n\t\t"toolbar",\n\t\t"background-transparent",\n\t],\n\t"label": "Facebook Owned Profiles",\n\t"props": {\n\t\t"id": {\n\t\t\t"expr": "datum[\'network\'] + \'-\' + datum[\'value\']",\n\t\t},\n\t\t"options": ${data.data.fbProfiles},\n\t\t"encode:value": {\n\t\t\t"image": {\n\t\t\t\t"field": "picture",\n\t\t\t\t"variant": "circular",\n\t\t\t\t"fallback": {\n\t\t\t\t\t"value": "profile",\n\t\t\t\t},\n\t\t\t},\n\t\t\t"title": {\n\t\t\t\t"field": "title",\n\t\t\t},\n\t\t\t"subtitle": {\n\t\t\t\t"expr": "\'/\' + datum.screenName",\n\t\t\t},\n            "subtitleRibbon": {\n\t\t\t\t"field": \'network\',\n\t\t\t},\n\t\t},\n\t\t"encode:option": {\n\t\t\t// for the options\n\t\t\t"image": {\n\t\t\t\t"field": "picture",\n\t\t\t\t"variant": "circular",\n\t\t\t\t"fallback": {\n\t\t\t\t\t"value": "profile",\n\t\t\t\t},\n\t\t\t},\n\t\t\t"title": {\n\t\t\t\t"field": "title",\n\t\t\t},\n\t\t\t"subtitle": {\n\t\t\t\t"expr": "\'/\' + datum.screenName",\n\t\t\t},\n            "subtitleRibbon": {\n\t\t\t\t"field": \'network\',\n\t\t\t},\n\t\t},\n\t\t"encode:empty": {\n        \t"illustration": "profile",\n        \t"title": "No profiles were found",\n        \t"subtitle": [\n            \t"You have no profile assigned.\\nAssign one or ",\n\t\t\t\t{\n\t\t\t\t\t"component": "link",\n\t\t\t\t\t"text": "add new profiles.",\n\t\t\t\t\t"props": {\n\t\t\t\t\t\t"id": 1\n\t\t\t\t\t},\n\t\t\t\t\ton: {\n\t\t\t\t\t\tevent: "click",\n\t\t\t\t\t\tfire: "showAddProfileDialog",\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tcurrentView: "add-private-profiles"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n        \t]\n   \t\t},\n\t},\n}',
			created_at: '2023-11-06T11:42:44.417Z',
			deleted_at: null,
			updated_at: '2023-11-06T11:42:44.417Z',
		},
		{
			id: 35911,
			board_id: 2197,
			type: 'vision',
			layout: {
				h: 5,
				w: 2,
				x: 2,
				y: 16,
			},
			requests:
				'{\n\t"path": "/2/dev~omni-api/crossplatform/raw",\n\t"payload": {\n\t\t"accountId": ${string:acl_account_id},\n\t\t"userId": ${string:user_acl_id},\n\t\t"options": {\n\t\t\t"auth": true,\n\t\t\t"output": [\n\t\t\t\t"data",\n\t\t\t\t"raw",\n\t\t\t\t"payload",\n\t\t\t\t"query",\n\t\t\t],\n\t\t\t"explain": true,\n\t\t},\n\t\t\t\t// Request\n"target": [\n\t\t\t{\n\t\t\t\t"metric": "insights_video_views",\n\t\t\t\t"aggregation": "sum",\n\t\t\t},\n\t\t],\n\t\t"filters": [\n\t\t\t{\n\t\t\t\t"created_time": {\n\t\t\t\t\t"timeFrom": ${daterange:daterange|start|zone("utc", true)},\n\t\t\t\t\t"timeTo": ${daterange:daterange|end|zone("utc", true)|minus("second", 1)|endOf("day")},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"profile_id": {\n\t\t\t\t\t"values": ${fbProfiles|expr("input.map((p) => {if (typeof p !== \'string\') return p; const [network, value] = p.split(\'-\'); return {network, value};}).map(({value, network}) => ({id: value, platform: network}))")},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"origin": {\n\t\t\t\t\t"values": [\n\t\t\t\t\t\t"outgoing",\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"spam_post": {\n\t\t\t\t\t"value": false,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"deleted_post": {\n\t\t\t\t\t"value": false,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"dimensions": [\n\t\t\t{\n\t\t\t\t"type": "date",\n\t\t\t\t"aggregation": ${daterange:daterange|bucketUnit},\n\t\t\t},\n\t\t],\n\t},\n}',
			config:
				'{\n\t"hammer": {\n\t\t"type": "evolution_bar",\n\t\t"config": {\n\t\t\t"title": "Video views trend",\n\t\t\t"daterange": "daterange",\n\t\t\t"metric": {\n\t\t\t\t"name": "Video views",\n\t\t\t},\n\t\t\t"dimension0": {\n\t\t\t\t"title": "Date",\n\t\t\t\t"field": "dim0",\n\t\t\t\t"interactivity": {\n\t\t\t\t\t"signalUpdate": {\n\t\t\t\t\t\t"update": {\n\t\t\t\t\t\t\t"signal": "daterange",\n\t\t\t\t\t\t\t"value": {\n\t\t\t\t\t\t\t\t"expr": "dataset(\'root\')[datum.$index + 1] ? datum.dim0.toISO() + \'/\' + dataset(\'root\')[datum.$index + 1].dim0.toISO() : datum.dim0.toISO() + \'/P1D\'",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t"openAdditionalBoard": {\n\t\t\t\t\t\t"boardId": "{{global.boards.fbContent}}",\n\t\t\t\t\t\t"parameter_daterange": {\n\t\t\t\t\t\t\t"expr": "dataset(\'root\')[datum.$index + 1] ? datum.dim0.toISO() + \'/\' + dataset(\'root\')[datum.$index + 1].dim0.toISO() : datum.dim0.toISO() + \'/P1M\'",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t"variant": "narrow",\n\t\t\t\t\t\t"parameter_sort": {\n\t\t\t\t\t\t\t"expr": "{\\"type\\": \\"likeCount\\", \\"order\\": \\"desc\\"}",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t"fill": "#1877F2",\n\t\t\t"tooltip": "An overview of the lifetime number of views for videos that were published during the selected date range, segregated by publication date. Facebook considers a video viewed when it was watched for 3+ seconds.",\n\t\t\t"badges": [\n\t\t\t\t{\n\t\t\t\t\t"title": "Post Level",\n\t\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t},\n\t"header": {\n\t\t"title": "Video views trend",\n\t\t"subtitle": `${daterange:daterange|humanize} • Aggregated by ${daterange:daterange|bucketUnit}`,\n\t\t"tooltip": "An overview of the lifetime number of views for videos that were published during the selected date range, segregated by publication date. Facebook considers a video viewed when it was watched for 3+ seconds.",\n\t\t"badges": [\n\t\t\t{\n\t\t\t\t"title": "Interactive",\n\t\t\t\t"tooltip": "Click on a data point in the chart or graph to view the content associated with it",\n\t\t\t\t"variant": "active",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"title": "Post Level",\n\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t},\n\t\t],\n\t},\n\t"container": {\n\t\t"padding": "0px",\n\t\t"visionPadding": "12px",\n\t},\n\t"vision": {\n\t\t"data": [\n\t\t\t{\n\t\t\t\t"name": "root",\n\t\t\t\t"format": "omni-full",\n\t\t\t\t"transform": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "parse",\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"as": "datetime",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"source": "$input",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "minValue",\n\t\t\t\t"format": "set",\n\t\t\t\t"transform": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "sort",\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "slice",\n\t\t\t\t\t\t"start": 0,\n\t\t\t\t\t\t"end": 1,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"source": "root",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "maxValue",\n\t\t\t\t"format": "set",\n\t\t\t\t"transform": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "sort",\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"order": "desc",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "slice",\n\t\t\t\t\t\t"start": 0,\n\t\t\t\t\t\t"end": 1,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"source": "root",\n\t\t\t},\n\t\t],\n\t\t"formats": [\n\t\t\t{\n\t\t\t\t"name": "y",\n\t\t\t\t"type": "expr",\n\t\t\t\t"expr": "(isNaN(value) || value === null) ? \'N/A\' : ( value < 10000 ? ((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \') : (new Intl.NumberFormat(\'en-US\', {notation: \'compact\',maximumFractionDigits: 2})).format(value))",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "number",\n\t\t\t\t"name": "axisY",\n\t\t\t\t"options": {\n\t\t\t\t\t"notation": "compact",\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "expr",\n\t\t\t\t"name": "tooltip",\n\t\t\t\t"expr": "((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \')",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "x",\n\t\t\t\t"type": "datetime",\n\t\t\t\t"options": {\n\t\t\t\t\t"day": "numeric",\n\t\t\t\t\t"month": "short",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"scales": [\n\t\t\t{\n\t\t\t\t"type": "linear",\n\t\t\t\t"name": "y",\n\t\t\t\t"domain": {\n\t\t\t\t\t"data": "root",\n\t\t\t\t\t"fields": [\n\t\t\t\t\t\t"value",\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t"range": "height",\n\t\t\t\t"domainMin": 0,\n\t\t\t\t"range": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"signal": "layout.bottom",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"signal": "layout.top",\n\t\t\t\t\t\t"offset": 15,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "band",\n\t\t\t\t"name": "x",\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"range": "width",\n\t\t\t},\n\t\t],\n\t\t"axes": [\n\t\t\t{\n\t\t\t\t"orientation": "bottom",\n\t\t\t\t"scale": "x",\n\t\t\t\t"format": "x",\n\t\t\t\t"size": 25,\n\t\t\t\t"ticks": 7,\n\t\t\t\t"name": "Time range",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"orientation": "left",\n\t\t\t\t"scale": "y",\n\t\t\t\t"caption": "Video views",\n\t\t\t\t"format": "axisY",\n\t\t\t\t"name": "Video views",\n\t\t\t\t"size": 55,\n\t\t\t\t"grid": true,\n\t\t\t\t"ticks": 5,\n\t\t\t\t"encode": {\n\t\t\t\t\t"stroke": "none",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"marks": [\n\t\t\t{\n\t\t\t\t"type": "rect",\n\t\t\t\t"on": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"event": "click",\n\t\t\t\t\t\t"fire": "openAdditionalBoard",\n\t\t\t\t\t\t"args": {\n\t\t\t\t\t\t\t"boardId": 934,\n\t\t\t\t\t\t\t"parameter_daterange": {\n\t\t\t\t\t\t\t\t"expr": "dataset(\'root\')[datum.$index + 1] ? datum.dim0.toISO() + \'/\' + dataset(\'root\')[datum.$index + 1].dim0.toISO() : datum.dim0.toISO() + \'/P1M\'",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t"variant": "narrow",\n\t\t\t\t\t\t\t"parameter_sort": {\n\t\t\t\t\t\t\t\t"expr": "{\\"type\\": \\"likeCount\\", \\"order\\": \\"desc\\"}",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"name": "Columns",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"tooltip": {\n\t\t\t\t\t"Date": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"format": "x",\n\t\t\t\t\t},\n\t\t\t\t\t"Video views": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "tooltip",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"y2": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"scale": "y",\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"value": "0",\n\t\t\t\t\t\t"scale": "y",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t},\n\t\t\t\t\t"width": {\n\t\t\t\t\t\t"band": 1,\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t},\n\t\t\t\t\t"fill": "#1877F2",\n\t\t\t\t\t"fillOpacity": 1,\n\t\t\t\t\t"radius": 3,\n\t\t\t\t\t":hover": {\n\t\t\t\t\t\t"fillOpacity": 0.9,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Text",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"hidden": {\n\t\t\t\t\t\t"expr": "(dataset(\'maxValue\')[0].value === dataset(\'minValue\')[0].value) || dataset(\'root\').length < 5 || !datum.value || bandwidth(\'x\') < 40",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "datum.value < 0 ? scale(\'y\', datum.value) + 10 : scale(\'y\', datum.value) - 10",\n\t\t\t\t\t},\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "y",\n\t\t\t\t\t},\n\t\t\t\t\t"fill": {\n\t\t\t\t\t\t"expr": "datum.value === dataset(\'maxValue\')[0].value ? \'green\' : datum.value === dataset(\'minValue\')[0].value ? \'red\' : \'black\'",\n\t\t\t\t\t},\n\t\t\t\t\t"fontWeight": "bold",\n\t\t\t\t\t"width": {\n\t\t\t\t\t\t"band": 1,\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t},\n\t\t\t\t\t"align": "center",\n\t\t\t\t\t"anchorY": "middle",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			created_at: '2023-11-06T11:42:44.417Z',
			deleted_at: null,
			updated_at: '2023-11-06T11:42:44.417Z',
		},
		{
			id: 35913,
			board_id: 2197,
			type: 'vision',
			layout: {
				h: 5,
				w: 1,
				x: 1,
				y: 16,
			},
			requests:
				'[\n\t{\n\t\t"path": "/2/dev~omni-api/crossplatform/raw",\n\t\t"payload": {\n\t\t\t"accountId": ${string:acl_account_id},\n\t\t\t"userId": ${string:user_acl_id},\n\t\t\t"options": {\n\t\t\t\t"auth": true,\n\t\t\t\t"output": [\n\t\t\t\t\t"data",\n\t\t\t\t\t"raw",\n\t\t\t\t\t"payload",\n\t\t\t\t\t"query",\n\t\t\t\t],\n\t\t\t\t"explain": true,\n\t\t\t},\n\t\t\t\t\t\t// Request\n"target": [\n\t\t\t\t{\n\t\t\t\t\t"metric": "insights_video_views",\n\t\t\t\t\t"aggregation": "sum",\n\t\t\t\t},\n\t\t\t],\n\t\t\t"filters": [\n\t\t\t\t{\n\t\t\t\t\t"created_time": {\n\t\t\t\t\t\t"timeFrom": ${daterange:daterange|start|zone("utc", true)},\n\t\t\t\t\t\t"timeTo": ${daterange:daterange|end|zone("utc", true)|minus("second", 1)|endOf("day")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"profile_id": {\n\t\t\t\t\t\t"values": ${fbProfiles|expr("input.map((p) => {if (typeof p !== \'string\') return p; const [network, value] = p.split(\'-\'); return {network, value};}).map(({value, network}) => ({id: value, platform: network}))")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"origin": {\n\t\t\t\t\t\t"values": [\n\t\t\t\t\t\t\t"outgoing",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"spam_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"deleted_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\t"dimensions": [],\n\t\t},\n\t},\n\t{\n\t\t"path": "/2/dev~omni-api/crossplatform/raw",\n\t\t"payload": {\n\t\t\t"accountId": ${string:acl_account_id},\n\t\t\t"userId": ${string:user_acl_id},\n\t\t\t"options": {\n\t\t\t\t"auth": true,\n\t\t\t\t"output": [\n\t\t\t\t\t"data",\n\t\t\t\t\t"raw",\n\t\t\t\t\t"payload",\n\t\t\t\t\t"query",\n\t\t\t\t],\n\t\t\t\t"explain": true,\n\t\t\t},\n\t\t\t\t\t\t// Request\n"target": [\n\t\t\t\t{\n\t\t\t\t\t"metric": "insights_video_views",\n\t\t\t\t\t"aggregation": "sum",\n\t\t\t\t},\n\t\t\t],\n\t\t\t"filters": [\n\t\t\t\t{\n\t\t\t\t\t"created_time": {\n\t\t\t\t\t\t"timeFrom": ${daterange:daterange|previousSuite|start|zone("utc", true)},\n\t\t\t\t\t\t"timeTo": ${daterange:daterange|previousSuite|end|zone("utc", true)|minus("second", 1)|endOf("day")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"profile_id": {\n\t\t\t\t\t\t"values": ${fbProfiles|expr("input.map((p) => {if (typeof p !== \'string\') return p; const [network, value] = p.split(\'-\'); return {network, value};}).map(({value, network}) => ({id: value, platform: network}))")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"origin": {\n\t\t\t\t\t\t"values": [\n\t\t\t\t\t\t\t"outgoing",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"spam_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"deleted_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\t"dimensions": [],\n\t\t},\n\t},\n]',
			config:
				'{\n\t"hammer": {\n\t\t"type": "value_change",\n\t\t"config": {\n\t\t\t"title": "Video views",\n\t\t\t"daterange": "daterange",\n\t\t\t"metric": {\n\t\t\t\t"name": "Video views",\n\t\t\t\t"shouldTrendDecrease": false,\n\t\t\t},\n\t\t\t"tooltip": "The lifetime number of views received by videos that were published during the selected date range. Facebook considers a video viewed when it was watched for 3+ seconds.",\n\t\t\t"interactivity": {\n\t\t\t\t"openAdditionalBoard": {\n\t\t\t\t\t"boardId": "{{global.boards.fbContent}}",\n\t\t\t\t\t"variant": "narrow",\n\t\t\t\t\t"parameter_sort": {\n\t\t\t\t\t\t"expr": "{\\"type\\": \\"videoViews\\", \\"order\\": \\"desc\\"}",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t"badges": [\n\t\t\t\t{\n\t\t\t\t\t"title": "Post Level",\n\t\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t},\n\t"header": {\n\t\t"title": "Video views",\n\t\t"subtitle": ${daterange:daterange|humanize},\n\t\t"tooltip": "The lifetime number of views received by videos that were published during the selected date range. Facebook considers a video viewed when it was watched for 3+ seconds.",\n\t\t"badges": [\n\t\t\t{\n\t\t\t\t"title": "Post Level",\n\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t},\n\t\t],\n\t},\n\t"container": {\n\t\t"padding": "0px",\n\t\t"visionPadding": "12px",\n\t},\n\t"vision": {\n\t\t"data": [\n\t\t\t{\n\t\t\t\t"name": "current",\n\t\t\t\t"path": [\n\t\t\t\t\t0,\n\t\t\t\t],\n\t\t\t\t"format": "omni-full",\n\t\t\t\t"source": "$input",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "previous",\n\t\t\t\t"path": [\n\t\t\t\t\t1,\n\t\t\t\t],\n\t\t\t\t"format": "omni-full",\n\t\t\t\t"source": "$input",\n\t\t\t},\n\t\t],\n\t\t"formats": [\n\t\t\t{\n\t\t\t\t"name": "value",\n\t\t\t\t"type": "expr",\n\t\t\t\t"expr": "(isNaN(value) || value === null) ? \'N/A\' : ( value < 1000000 ? ((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \') : (new Intl.NumberFormat(\'en-US\', {notation: \'compact\',maximumFractionDigits: 2})).format(value))",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "expr",\n\t\t\t\t"name": "percentage",\n\t\t\t\t"expr": "(isNaN(value) || value === null) ? \'N/A\' : (new Intl.NumberFormat(\'en-US\', {notation: \'compact\', maximumFractionDigits: 2, signDisplay: \'exceptZero\', style: \'percent\'})).format(value)",\n\t\t\t},\n\t\t],\n\t\t"scales": [\n\t\t\t{\n\t\t\t\t"type": "threshold",\n\t\t\t\t"name": "color",\n\t\t\t\t"domain": [\n\t\t\t\t\t0,\n\t\t\t\t],\n\t\t\t\t"range": [\n\t\t\t\t\t"#DA1E28",\n\t\t\t\t\t"#24A148",\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\t"marks": [\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"on": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"event": "click",\n\t\t\t\t\t\t"fire": "openAdditionalBoard",\n\t\t\t\t\t\t"args": {\n\t\t\t\t\t\t\t"boardId": 934,\n\t\t\t\t\t\t\t"variant": "narrow",\n\t\t\t\t\t\t\t"parameter_sort": {\n\t\t\t\t\t\t\t\t"expr": "{\\"type\\": \\"videoViews\\", \\"order\\": \\"desc\\"}",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"name": "Current Value",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "current",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"fontSize": 36,\n\t\t\t\t\t"fill": "#444",\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "value",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "end",\n\t\t\t\t\t"fontWeight": "medium",\n\t\t\t\t\t"anchorX": "middle",\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "(signal(\'layout.top\') + signal(\'layout.height\') / 2 ) - 15",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"expr": "signal(\'container.width\') / 2",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Relative Change Value",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "previous",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "signal(\'layout.top\') +  ( signal(\'layout.height\') / 2 ) + 30",\n\t\t\t\t\t},\n\t\t\t\t\t"fill": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"expr": "dataset(\'current\')[index].value === null || datum.value === 0 || datum.value === null ? \'black\' :scale(\'color\', ((dataset(\'current\')[index].value - datum.value) / Math.abs(datum.value)))",\n\t\t\t\t\t},\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "percentage",\n\t\t\t\t\t\t"expr": "dataset(\'current\')[index].value === null || datum.value === 0 || datum.value === null ? \'N/A\' : ((dataset(\'current\')[index].value - datum.value) / Math.abs(datum.value))",\n\t\t\t\t\t},\n\t\t\t\t\t"fontSize": 14,\n\t\t\t\t\t"fontWeight": "bold",\n\t\t\t\t\t"anchorX": {\n\t\t\t\t\t\t"expr": "signal(\'container.width\') > 300 ? \'end\' : \'middle\'",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "middle",\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"expr": "(signal(\'container.width\') / 2) - (signal(\'container.width\') > 300 ? 45 : 0)",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Relative Change Text",\n\t\t\t\t"encode": {\n\t\t\t\t\t"text": `${daterange:daterange|previousSuite|start|format("DD")|prepend("vs ")} - ${daterange:daterange|previousSuite|end|minus("second", 1)|format("DD")}`,\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"expr": "(signal(\'container.width\') / 2) - (signal(\'container.width\') > 300 ? 40 : 0)",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorX": {\n\t\t\t\t\t\t"expr": "signal(\'container.width\') > 300 ? \'start\' : \'middle\'",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "middle",\n\t\t\t\t\t"fontSize": 11,\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "signal(\'layout.top\') +  ( signal(\'layout.height\') / 2 ) + (signal(\'container.width\') > 300 ? 30 : 50) ",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "MetricName",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "current",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"fontSize": 11,\n\t\t\t\t\t"fill": "#757575",\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"signal": "container.width",\n\t\t\t\t\t\t"mult": 0.5,\n\t\t\t\t\t},\n\t\t\t\t\t"anchorX": "middle",\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "(signal(\'layout.top\') + signal(\'layout.height\') / 2) + 5",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "end",\n\t\t\t\t\t"text": "Video views",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			created_at: '2023-11-06T11:42:44.417Z',
			deleted_at: null,
			updated_at: '2023-11-06T11:42:44.417Z',
		},
		{
			id: 35914,
			board_id: 2197,
			type: 'vision',
			layout: {
				h: 5,
				w: 2,
				x: 1,
				y: 11,
			},
			requests:
				'[\n\t{\n\t\t"path": "/2/dev~omni-api/crossplatform/raw",\n\t\t"payload": {\n\t\t\t"accountId": ${string:acl_account_id},\n\t\t\t"userId": ${string:user_acl_id},\n\t\t\t"options": {\n\t\t\t\t"auth": true,\n\t\t\t\t"output": [\n\t\t\t\t\t"data",\n\t\t\t\t\t"raw",\n\t\t\t\t\t"payload",\n\t\t\t\t\t"query",\n\t\t\t\t],\n\t\t\t\t"explain": true,\n\t\t\t},\n\t\t\t\t\t\t// Request\n"target": [\n\t\t\t\t{\n\t\t\t\t\t"metric": "insights_reach_per_content",\n\t\t\t\t\t"aggregation": "avg",\n\t\t\t\t},\n\t\t\t],\n\t\t\t"filters": [\n\t\t\t\t{\n\t\t\t\t\t"created_time": {\n\t\t\t\t\t\t"timeFrom": ${daterange:daterange|start|zone("utc", true)},\n\t\t\t\t\t\t"timeTo": ${daterange:daterange|end|zone("utc", true)|minus("second", 1)|endOf("day")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"profile_id": {\n\t\t\t\t\t\t"values": ${array:fbProfiles|expr("input.map((p) => {if (typeof p !== \'string\') return p; const [network, value] = p.split(\'-\'); return {network, value};}).map(({value, network}) => ({id: value, platform: network}))")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"origin": {\n\t\t\t\t\t\t"values": [\n\t\t\t\t\t\t\t"outgoing",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"spam_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"deleted_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\t"dimensions": [\n\t\t\t\t{\n\t\t\t\t\t"type": "date",\n\t\t\t\t\t"aggregation": ${daterange:daterange|bucketUnit},\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t},\n\t{\n\t\t"path": "/2/dev~omni-api/crossplatform/raw",\n\t\t"payload": {\n\t\t\t"accountId": ${string:acl_account_id},\n\t\t\t"userId": ${string:user_acl_id},\n\t\t\t"options": {\n\t\t\t\t"auth": true,\n\t\t\t\t"output": [\n\t\t\t\t\t"data",\n\t\t\t\t\t"raw",\n\t\t\t\t\t"payload",\n\t\t\t\t\t"query",\n\t\t\t\t],\n\t\t\t\t"explain": true,\n\t\t\t},\n\t\t\t\t\t\t// Request\n"target": [\n\t\t\t\t{\n\t\t\t\t\t"metric": "insights_impressions",\n\t\t\t\t\t"aggregation": "avg",\n\t\t\t\t},\n\t\t\t],\n\t\t\t"filters": [\n\t\t\t\t{\n\t\t\t\t\t"created_time": {\n\t\t\t\t\t\t"timeFrom": ${daterange:daterange|start|zone("utc", true)},\n\t\t\t\t\t\t"timeTo": ${daterange:daterange|end|zone("utc", true)|minus("second", 1)|endOf("day")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"profile_id": {\n\t\t\t\t\t\t"values": ${array:fbProfiles|expr("input.map((p) => {if (typeof p !== \'string\') return p; const [network, value] = p.split(\'-\'); return {network, value};}).map(({value, network}) => ({id: value, platform: network}))")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"origin": {\n\t\t\t\t\t\t"values": [\n\t\t\t\t\t\t\t"outgoing",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"spam_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"deleted_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\t"dimensions": [\n\t\t\t\t{\n\t\t\t\t\t"type": "date",\n\t\t\t\t\t"aggregation": ${daterange:daterange|bucketUnit},\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t},\n]',
			config:
				'{\n\t"hammer": {\n\t\t"type": "evolution_bar_multi",\n\t\t"config": {\n\t\t\t"title": "Average reach per content piece trend",\n\t\t\t"daterange": "daterange",\n\t\t\t"metric": {\n\t\t\t\t"name": "Average reach per post",\n\t\t\t},\n\t\t\t"primaryMetric": {\n\t\t\t\t"name": "Avg. reach per post",\n\t\t\t\t"color": "#1e88e5",\n\t\t\t},\n\t\t\t"secondaryMetric": {\n\t\t\t\t"name": "Avg. impressions per post",\n\t\t\t\t"color": "#0d47a1",\n\t\t\t},\n\t\t\t"tooltip": "An overview of average lifetime reach for posts published during the selected date range, segregated by publication date.\\n\\nAverage reach is calculated as the sum of lifetime reach for all posts, divided by the number of posts from the same period.",\n\t\t\t"badges": [\n\t\t\t\t{\n\t\t\t\t\t"title": "Post Level",\n\t\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t},\n\t"header": {\n\t\t"title": "Average reach per content piece trend",\n\t\t"subtitle": `${daterange:daterange|humanize} • Aggregated by ${daterange:daterange|bucketUnit}`,\n\t\t"tooltip": "An overview of average lifetime reach for posts published during the selected date range, segregated by publication date.\\n\\nAverage reach is calculated as the sum of lifetime reach for all posts, divided by the number of posts from the same period.",\n\t\t"badges": [\n\t\t\t{\n\t\t\t\t"title": "Post Level",\n\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t},\n\t\t],\n\t},\n\t"container": {\n\t\t"padding": "0px",\n\t\t"visionPadding": "12px",\n\t},\n\t"vision": {\n\t\t"data": [\n\t\t\t{\n\t\t\t\t"name": "primary",\n\t\t\t\t"path": [\n\t\t\t\t\t0,\n\t\t\t\t],\n\t\t\t\t"format": "omni-full",\n\t\t\t\t"transform": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "parse",\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"as": "datetime",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"source": "$input",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "secondary",\n\t\t\t\t"path": [\n\t\t\t\t\t1,\n\t\t\t\t],\n\t\t\t\t"format": "omni-full",\n\t\t\t\t"transform": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "parse",\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"as": "datetime",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"source": "$input",\n\t\t\t},\n\t\t],\n\t\t"formats": [\n\t\t\t{\n\t\t\t\t"name": "primaryY",\n\t\t\t\t"type": "expr",\n\t\t\t\t"expr": "(isNaN(value) || value === null) ? \'N/A\' : ( value < 10000 ? ((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \') : (new Intl.NumberFormat(\'en-US\', {notation: \'compact\',maximumFractionDigits: 2})).format(value))",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "number",\n\t\t\t\t"name": "primaryAxisY",\n\t\t\t\t"options": {\n\t\t\t\t\t"notation": "compact",\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "expr",\n\t\t\t\t"name": "primaryTooltip",\n\t\t\t\t"expr": "((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \')",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "secondaryY",\n\t\t\t\t"type": "expr",\n\t\t\t\t"expr": "(isNaN(value) || value === null) ? \'N/A\' : ( value < 10000 ? ((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \') : (new Intl.NumberFormat(\'en-US\', {notation: \'compact\',maximumFractionDigits: 2})).format(value))",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "number",\n\t\t\t\t"name": "secondaryAxisY",\n\t\t\t\t"options": {\n\t\t\t\t\t"notation": "compact",\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "expr",\n\t\t\t\t"name": "secondaryTooltip",\n\t\t\t\t"expr": "((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \')",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "x",\n\t\t\t\t"type": "datetime",\n\t\t\t\t"options": {\n\t\t\t\t\t"day": "numeric",\n\t\t\t\t\t"month": "short",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"scales": [\n\t\t\t{\n\t\t\t\t"type": "linear",\n\t\t\t\t"name": "y",\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "value",\n\t\t\t\t\t"data": "primary",\n\t\t\t\t},\n\t\t\t\t"range": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"signal": "layout.bottom",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"signal": "layout.top",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"domainMin": 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "band",\n\t\t\t\t"name": "x",\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t"data": "primary",\n\t\t\t\t},\n\t\t\t\t"range": "width",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "band",\n\t\t\t\t"name": "x_0",\n\t\t\t\t"domain": [\n\t\t\t\t\t"primary",\n\t\t\t\t\t"secondary",\n\t\t\t\t],\n\t\t\t\t"range": [\n\t\t\t\t\t0,\n\t\t\t\t\t{\n\t\t\t\t\t\t"band": 1,\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "linear",\n\t\t\t\t"name": "y2",\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "value",\n\t\t\t\t\t"data": "secondary",\n\t\t\t\t},\n\t\t\t\t"range": "height",\n\t\t\t\t"domainMin": 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "ordinal",\n\t\t\t\t"name": "color",\n\t\t\t\t"domain": [\n\t\t\t\t\t"primary",\n\t\t\t\t\t"secondary",\n\t\t\t\t],\n\t\t\t\t"range": [\n\t\t\t\t\t"#1e88e5",\n\t\t\t\t\t"#0d47a1",\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\t"axes": [\n\t\t\t{\n\t\t\t\t"orientation": "bottom",\n\t\t\t\t"scale": "x",\n\t\t\t\t"format": "x",\n\t\t\t\t"size": 25,\n\t\t\t\t"ticks": 7,\n\t\t\t\t"name": "Time range",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"orientation": "left",\n\t\t\t\t"scale": "y",\n\t\t\t\t"caption": "Avg. reach per post",\n\t\t\t\t"name": "Avg. reach per post",\n\t\t\t\t"size": 55,\n\t\t\t\t"format": "primaryAxisY",\n\t\t\t\t"ticks": 5,\n\t\t\t\t"grid": true,\n\t\t\t\t"encode": {\n\t\t\t\t\t"stroke": "none",\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"orientation": "right",\n\t\t\t\t"scale": "y2",\n\t\t\t\t"caption": "Avg. impressions per post",\n\t\t\t\t"name": "Avg. impressions per post",\n\t\t\t\t"size": 55,\n\t\t\t\t"format": "secondaryAxisY",\n\t\t\t\t"ticks": 5,\n\t\t\t\t"encode": {\n\t\t\t\t\t"stroke": "none",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"marks": [\n\t\t\t{\n\t\t\t\t"type": "rect",\n\t\t\t\t"name": "Primary",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "primary",\n\t\t\t\t},\n\t\t\t\t"tooltip": {\n\t\t\t\t\t"Date": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"format": "x",\n\t\t\t\t\t},\n\t\t\t\t\t"AVG Reach per Post": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "primaryTooltip",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"y2": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"scale": "y",\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"value": "0",\n\t\t\t\t\t\t"scale": "y",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t\t"offset": {\n\t\t\t\t\t\t\t"value": "primary",\n\t\t\t\t\t\t\t"scale": "x_0",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t"fill": {\n\t\t\t\t\t\t"value": "primary",\n\t\t\t\t\t\t"scale": "color",\n\t\t\t\t\t},\n\t\t\t\t\t"fillOpacity": 1,\n\t\t\t\t\t"radius": 3,\n\t\t\t\t\t"width": {\n\t\t\t\t\t\t"band": 1,\n\t\t\t\t\t\t"scale": "x_0",\n\t\t\t\t\t},\n\t\t\t\t\t":hover": {\n\t\t\t\t\t\t"fillOpacity": 0.9,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "rect",\n\t\t\t\t"name": "Secondary",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "secondary",\n\t\t\t\t},\n\t\t\t\t"tooltip": {\n\t\t\t\t\t"Date": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"format": "x",\n\t\t\t\t\t},\n\t\t\t\t\t"AVG Impressions": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "secondaryTooltip",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"y2": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"scale": "y2",\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"value": "0",\n\t\t\t\t\t\t"scale": "y",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t\t"offset": {\n\t\t\t\t\t\t\t"value": "secondary",\n\t\t\t\t\t\t\t"scale": "x_0",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t"fill": {\n\t\t\t\t\t\t"value": "secondary",\n\t\t\t\t\t\t"scale": "color",\n\t\t\t\t\t},\n\t\t\t\t\t"fillOpacity": 1,\n\t\t\t\t\t"radius": 3,\n\t\t\t\t\t"width": {\n\t\t\t\t\t\t"band": 1,\n\t\t\t\t\t\t"scale": "x_0",\n\t\t\t\t\t},\n\t\t\t\t\t":hover": {\n\t\t\t\t\t\t"fillOpacity": 0.9,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			created_at: '2023-11-06T11:42:44.417Z',
			deleted_at: null,
			updated_at: '2023-11-20T16:33:26.248Z',
		},
		{
			id: 35916,
			board_id: 2197,
			type: 'vision',
			layout: {
				h: 5,
				w: 1,
				x: 3,
				y: 11,
			},
			requests:
				'{\n\t"path": "/2/dev~omni-api/crossplatform/raw",\n\t"payload": {\n\t\t"accountId": ${string:acl_account_id},\n\t\t"userId": ${string:user_acl_id},\n\t\t"options": {\n\t\t\t"auth": true,\n\t\t\t"output": [\n\t\t\t\t"data",\n\t\t\t\t"raw",\n\t\t\t\t"payload",\n\t\t\t\t"query",\n\t\t\t],\n\t\t\t"explain": true,\n\t\t},\n\t\t\t\t// Request\n"target": [\n\t\t\t{\n\t\t\t\t"metric": "insights_reach_per_content",\n\t\t\t\t"aggregation": "avg",\n\t\t\t},\n\t\t],\n\t\t"filters": [\n\t\t\t{\n\t\t\t\t"created_time": {\n\t\t\t\t\t"timeFrom": ${daterange:daterange|start|zone("utc", true)},\n\t\t\t\t\t"timeTo": ${daterange:daterange|end|zone("utc", true)|minus("second", 1)|endOf("day")},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"profile_id": {\n\t\t\t\t\t"values": ${fbProfiles|expr("input.map((p) => {if (typeof p !== \'string\') return p; const [network, value] = p.split(\'-\'); return {network, value};}).map(({value, network}) => ({id: value, platform: network}))")},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"origin": {\n\t\t\t\t\t"values": [\n\t\t\t\t\t\t"outgoing",\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"spam_post": {\n\t\t\t\t\t"value": false,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"deleted_post": {\n\t\t\t\t\t"value": false,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"dimensions": [\n\t\t\t{\n\t\t\t\t"type": "media_type",\n\t\t\t\t"group": {\n\t\t\t\t\t"sort": {\n\t\t\t\t\t\t"key": "value",\n\t\t\t\t\t\t"order": "desc",\n\t\t\t\t\t},\n\t\t\t\t\t"limit": 8,\n\t\t\t\t\t"other": {\n\t\t\t\t\t\t"aggregation": "avg",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			config:
				'{\n\t"hammer": {\n\t\t"type": "category_rows",\n\t\t"config": {\n\t\t\t"title": "Average reach per media type",\n\t\t\t"daterange": "daterange",\n\t\t\t"metric": {\n\t\t\t\t"name": "Average reach per post",\n\t\t\t},\n\t\t\t"dimension0": {\n\t\t\t\t"field": "dim0",\n\t\t\t\t"title": "Reach",\n\t\t\t\t"interactivity": {\n\t\t\t\t\t"openAdditionalBoard": {\n\t\t\t\t\t\t"boardId": "{{global.boards.fbContent}}",\n\t\t\t\t\t\t"variant": "narrow",\n\t\t\t\t\t\t"parameter_mediaTypes": {\n\t\t\t\t\t\t\t"expr": "[datum[\\"dim0\\"].toLowerCase()]",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t"mapping": "{{organic.dimension.media_type.mapping}}",\n\t\t\t\t"colorScale": [\n\t\t\t\t\t"#3F51B5",\n\t\t\t\t\t"#2196F3",\n\t\t\t\t\t"#00BCD4",\n\t\t\t\t\t"#009688",\n\t\t\t\t\t"#4CAF50",\n\t\t\t\t],\n\t\t\t},\n\t\t\t"tooltip": "The sum of lifetime reach for every content piece published during the selected date range, divided by the number of content pieces from the same period. Data is segregated by media type (e.g. images, videos, links).",\n\t\t\t"badges": [\n\t\t\t\t{\n\t\t\t\t\t"title": "Post Level",\n\t\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t},\n\t"header": {\n\t\t"title": "Average reach per media type",\n\t\t"subtitle": ${daterange:daterange|humanize},\n\t\t"tooltip": "The sum of lifetime reach for every content piece published during the selected date range, divided by the number of content pieces from the same period. Data is segregated by media type (e.g. images, videos, links).",\n\t\t"badges": [\n\t\t\t{\n\t\t\t\t"title": "Interactive",\n\t\t\t\t"tooltip": "Click on a data point in the chart or graph to view the content associated with it",\n\t\t\t\t"variant": "active",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"title": "Post Level",\n\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t},\n\t\t],\n\t},\n\t"container": {\n\t\t"padding": "0px",\n\t\t"visionPadding": "12px",\n\t},\n\t"vision": {\n\t\t"data": [\n\t\t\t{\n\t\t\t\t"name": "root",\n\t\t\t\t"format": "omni-full",\n\t\t\t\t"source": "$input",\n\t\t\t\t"transform": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "filter",\n\t\t\t\t\t\t"predicate": "datum[\'value\'] > 0",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "map",\n\t\t\t\t\t\t"as": "dim0",\n\t\t\t\t\t\t"expr": "{\\"album\\":\\"Album\\",\\"animated_gif\\":\\"Animated GIF\\",\\"status\\":\\"Status\\",\\"photo\\":\\"Photo\\",\\"video\\":\\"Video\\",\\"link\\":\\"Link\\",\\"note\\":\\"Note\\",\\"poll\\":\\"Poll\\",\\"offer\\":\\"Offer\\",\\"carousel\\":\\"Carousel\\",\\"reel\\":\\"Reel\\"}[datum[\'dim0\']] || datum[\'dim0\']",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\t"signals": [\n\t\t\t{\n\t\t\t\t"name": "top",\n\t\t\t\t"value": {\n\t\t\t\t\t"signal": "layout.top",\n\t\t\t\t\t"offset": 10,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"formats": [\n\t\t\t{\n\t\t\t\t"name": "y",\n\t\t\t\t"type": "expr",\n\t\t\t\t"expr": "(isNaN(value) || value === null) ? \'N/A\' : ( value < 10000 ? ((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \') : (new Intl.NumberFormat(\'en-US\', {notation: \'compact\',maximumFractionDigits: 2})).format(value))",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "number",\n\t\t\t\t"name": "axisX",\n\t\t\t\t"options": {\n\t\t\t\t\t"notation": "compact",\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "expr",\n\t\t\t\t"name": "tooltip",\n\t\t\t\t"expr": "((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \')",\n\t\t\t},\n\t\t],\n\t\t"scales": [\n\t\t\t{\n\t\t\t\t"type": "linear",\n\t\t\t\t"name": "x",\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "value",\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"range": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"signal": "layout.left",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"signal": "layout.right",\n\t\t\t\t\t\t"offset": {\n\t\t\t\t\t\t\t"signal": "layout.width",\n\t\t\t\t\t\t\t"mult": -0.1,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"domainMin": 0,\n\t\t\t\t"nice": true,\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "ordinal",\n\t\t\t\t"name": "color",\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"range": [\n\t\t\t\t\t"#3F51B5",\n\t\t\t\t\t"#2196F3",\n\t\t\t\t\t"#00BCD4",\n\t\t\t\t\t"#009688",\n\t\t\t\t\t"#4CAF50",\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "linear",\n\t\t\t\t"name": "y",\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "value",\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"range": "width",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "band",\n\t\t\t\t"name": "trackBand",\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"range": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"signal": "layout.top",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"signal": "layout.bottom",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\t"axes": [\n\t\t\t{\n\t\t\t\t"orientation": "bottom",\n\t\t\t\t"scale": "x",\n\t\t\t\t"size": 40,\n\t\t\t\t"caption": "Average reach per post",\n\t\t\t\t"grid": true,\n\t\t\t\t"format": "axisX",\n\t\t\t\t"name": "Average reach per post",\n\t\t\t\t"ticks": 5,\n\t\t\t\t"encode": {\n\t\t\t\t\t"stroke": "none",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"marks": [\n\t\t\t{\n\t\t\t\t"type": "rect",\n\t\t\t\t"name": "Bullet tracks",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"tooltip": {\n\t\t\t\t\t"__actions__": {\n\t\t\t\t\t\t"value": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t"id": "ctc",\n\t\t\t\t\t\t\t\t"icon": "contentAssociated",\n\t\t\t\t\t\t\t\t"text": "View associated content",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t"on": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"event": "click",\n\t\t\t\t\t\t"fire": "openAdditionalBoard",\n\t\t\t\t\t\t"args": {\n\t\t\t\t\t\t\t"boardId": 934,\n\t\t\t\t\t\t\t"variant": "narrow",\n\t\t\t\t\t\t\t"parameter_mediaTypes": {\n\t\t\t\t\t\t\t\t"expr": "[datum[\\"dim0\\"].toLowerCase()]",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"encode": {\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"signal": "layout.left",\n\t\t\t\t\t},\n\t\t\t\t\t"height": {\n\t\t\t\t\t\t"expr": "(bandwidth(\'trackBand\') * 1) - 30",\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"scale": "trackBand",\n\t\t\t\t\t},\n\t\t\t\t\t"x2": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t},\n\t\t\t\t\t"fill": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"scale": "color",\n\t\t\t\t\t},\n\t\t\t\t\t"radius": 4,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Labels",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"signal": "layout.left",\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "scale(\'trackBand\', datum[\'dim0\']) + (bandwidth(\'trackBand\')) - 20",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "start",\n\t\t\t\t\t"fontSize": 11,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Value labels",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "y",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t\t"offset": 8,\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "scale(\'trackBand\', datum[\'dim0\']) + ((bandwidth(\'trackBand\', 1) - 30)) * 0.5",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "middle",\n\t\t\t\t\t"fontSize": 11,\n\t\t\t\t\t"fontWeight": "bolder",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			created_at: '2023-11-06T11:42:44.417Z',
			deleted_at: null,
			updated_at: '2023-11-06T11:42:44.417Z',
		},
		{
			id: 35917,
			board_id: 2197,
			type: 'field',
			layout: {
				h: 1,
				w: 1,
				x: 3,
				y: 0,
			},
			requests: null,
			config:
				'{\n\t"type": "daterange",\n\t"name": "daterange",\n\t"groupId": "main-bar",\n\t"tags": [\n\t\t"toolbar",\n\t\t"background-transparent",\n\t],\n\t"defaultValue": "P30D/now[sD]",\n}',
			created_at: '2023-11-06T11:42:44.417Z',
			deleted_at: null,
			updated_at: '2023-11-06T11:42:44.417Z',
		},
		{
			id: 35918,
			board_id: 2197,
			type: 'vision',
			layout: {
				h: 5,
				w: 1,
				x: 0,
				y: 16,
			},
			requests:
				'[\n\t{\n\t\t"path": "/2/dev~omni-api/crossplatform/raw",\n\t\t"payload": {\n\t\t\t"accountId": ${string:acl_account_id},\n\t\t\t"userId": ${string:user_acl_id},\n\t\t\t"options": {\n\t\t\t\t"auth": true,\n\t\t\t\t"output": [\n\t\t\t\t\t"data",\n\t\t\t\t\t"raw",\n\t\t\t\t\t"payload",\n\t\t\t\t\t"query",\n\t\t\t\t],\n\t\t\t\t"explain": true,\n\t\t\t},\n\t\t\t\t\t\t// Request\n"target": [\n\t\t\t\t{\n\t\t\t\t\t"metric": "page_posts",\n\t\t\t\t\t"aggregation": "sum",\n\t\t\t\t},\n\t\t\t],\n\t\t\t"filters": [\n\t\t\t\t{\n\t\t\t\t\t"created_time": {\n\t\t\t\t\t\t"timeFrom": ${daterange:daterange|start|zone("utc", true)},\n\t\t\t\t\t\t"timeTo": ${daterange:daterange|end|zone("utc", true)|minus("second", 1)|endOf("day")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"profile_id": {\n\t\t\t\t\t\t"values": ${fbProfiles|expr("input.map((p) => {if (typeof p !== \'string\') return p; const [network, value] = p.split(\'-\'); return {network, value};}).map(({value, network}) => ({id: value, platform: network}))")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"media_type": {\n\t\t\t\t\t\t"values": [\n\t\t\t\t\t\t\t"video",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"origin": {\n\t\t\t\t\t\t"values": [\n\t\t\t\t\t\t\t"outgoing",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"spam_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"deleted_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\t"dimensions": [],\n\t\t},\n\t},\n\t{\n\t\t"path": "/2/dev~omni-api/crossplatform/raw",\n\t\t"payload": {\n\t\t\t"accountId": ${string:acl_account_id},\n\t\t\t"userId": ${string:user_acl_id},\n\t\t\t"options": {\n\t\t\t\t"auth": true,\n\t\t\t\t"output": [\n\t\t\t\t\t"data",\n\t\t\t\t\t"raw",\n\t\t\t\t\t"payload",\n\t\t\t\t\t"query",\n\t\t\t\t],\n\t\t\t\t"explain": true,\n\t\t\t},\n\t\t\t\t\t\t// Request\n"target": [\n\t\t\t\t{\n\t\t\t\t\t"metric": "page_posts",\n\t\t\t\t\t"aggregation": "sum",\n\t\t\t\t},\n\t\t\t],\n\t\t\t"filters": [\n\t\t\t\t{\n\t\t\t\t\t"created_time": {\n\t\t\t\t\t\t"timeFrom": ${daterange:daterange|previousSuite|start|zone("utc", true)},\n\t\t\t\t\t\t"timeTo": ${daterange:daterange|previousSuite|end|zone("utc", true)|minus("second", 1)|endOf("day")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"profile_id": {\n\t\t\t\t\t\t"values": ${fbProfiles|expr("input.map((p) => {if (typeof p !== \'string\') return p; const [network, value] = p.split(\'-\'); return {network, value};}).map(({value, network}) => ({id: value, platform: network}))")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"media_type": {\n\t\t\t\t\t\t"values": [\n\t\t\t\t\t\t\t"video",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"origin": {\n\t\t\t\t\t\t"values": [\n\t\t\t\t\t\t\t"outgoing",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"spam_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"deleted_post": {\n\t\t\t\t\t\t"value": false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\t"dimensions": [],\n\t\t},\n\t},\n]',
			config:
				'{\n\t"hammer": {\n\t\t"type": "value_change",\n\t\t"config": {\n\t\t\t"title": "Number of videos",\n\t\t\t"daterange": "daterange",\n\t\t\t"metric": {\n\t\t\t\t"name": "Videos",\n\t\t\t\t"shouldTrendDecrease": false,\n\t\t\t},\n\t\t\t"interactivity": {\n\t\t\t\t"openAdditionalBoard": {\n\t\t\t\t\t"boardId": "{{global.boards.fbContent}}",\n\t\t\t\t\t"variant": "narrow",\n\t\t\t\t\t"parameter_mediaTypes": {\n\t\t\t\t\t\t"value": [\n\t\t\t\t\t\t\t"video",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t"parameter_sort": {\n\t\t\t\t\t\t"expr": "{\\"type\\": \\"likeCount\\", \\"order\\": \\"desc\\"}",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t"tooltip": "The sum of all videos published during the selected date range",\n\t\t\t"badges": [\n\t\t\t\t{\n\t\t\t\t\t"title": "Post Level",\n\t\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t},\n\t"header": {\n\t\t"title": "Number of videos",\n\t\t"subtitle": ${daterange:daterange|humanize},\n\t\t"tooltip": "The sum of all videos published during the selected date range",\n\t\t"badges": [\n\t\t\t{\n\t\t\t\t"title": "Post Level",\n\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t},\n\t\t],\n\t},\n\t"container": {\n\t\t"padding": "0px",\n\t\t"visionPadding": "12px",\n\t},\n\t"vision": {\n\t\t"data": [\n\t\t\t{\n\t\t\t\t"name": "current",\n\t\t\t\t"path": [\n\t\t\t\t\t0,\n\t\t\t\t],\n\t\t\t\t"format": "omni-full",\n\t\t\t\t"source": "$input",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "previous",\n\t\t\t\t"path": [\n\t\t\t\t\t1,\n\t\t\t\t],\n\t\t\t\t"format": "omni-full",\n\t\t\t\t"source": "$input",\n\t\t\t},\n\t\t],\n\t\t"formats": [\n\t\t\t{\n\t\t\t\t"name": "value",\n\t\t\t\t"type": "expr",\n\t\t\t\t"expr": "(isNaN(value) || value === null) ? \'N/A\' : ( value < 1000000 ? ((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \') : (new Intl.NumberFormat(\'en-US\', {notation: \'compact\',maximumFractionDigits: 2})).format(value))",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "expr",\n\t\t\t\t"name": "percentage",\n\t\t\t\t"expr": "(isNaN(value) || value === null) ? \'N/A\' : (new Intl.NumberFormat(\'en-US\', {notation: \'compact\', maximumFractionDigits: 2, signDisplay: \'exceptZero\', style: \'percent\'})).format(value)",\n\t\t\t},\n\t\t],\n\t\t"scales": [\n\t\t\t{\n\t\t\t\t"type": "threshold",\n\t\t\t\t"name": "color",\n\t\t\t\t"domain": [\n\t\t\t\t\t0,\n\t\t\t\t],\n\t\t\t\t"range": [\n\t\t\t\t\t"#DA1E28",\n\t\t\t\t\t"#24A148",\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\t"marks": [\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"on": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"event": "click",\n\t\t\t\t\t\t"fire": "openAdditionalBoard",\n\t\t\t\t\t\t"args": {\n\t\t\t\t\t\t\t"boardId": 934,\n\t\t\t\t\t\t\t"variant": "narrow",\n\t\t\t\t\t\t\t"parameter_mediaTypes": {\n\t\t\t\t\t\t\t\t"value": [\n\t\t\t\t\t\t\t\t\t"video",\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t"parameter_sort": {\n\t\t\t\t\t\t\t\t"expr": "{\\"type\\": \\"likeCount\\", \\"order\\": \\"desc\\"}",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"name": "Current Value",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "current",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"fontSize": 36,\n\t\t\t\t\t"fill": "#444",\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "value",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "end",\n\t\t\t\t\t"fontWeight": "medium",\n\t\t\t\t\t"anchorX": "middle",\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "(signal(\'layout.top\') + signal(\'layout.height\') / 2 ) - 15",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"expr": "signal(\'container.width\') / 2",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Relative Change Value",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "previous",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "signal(\'layout.top\') +  ( signal(\'layout.height\') / 2 ) + 30",\n\t\t\t\t\t},\n\t\t\t\t\t"fill": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"expr": "dataset(\'current\')[index].value === null || datum.value === 0 || datum.value === null ? \'black\' :scale(\'color\', ((dataset(\'current\')[index].value - datum.value) / Math.abs(datum.value)))",\n\t\t\t\t\t},\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "percentage",\n\t\t\t\t\t\t"expr": "dataset(\'current\')[index].value === null || datum.value === 0 || datum.value === null ? \'N/A\' : ((dataset(\'current\')[index].value - datum.value) / Math.abs(datum.value))",\n\t\t\t\t\t},\n\t\t\t\t\t"fontSize": 14,\n\t\t\t\t\t"fontWeight": "bold",\n\t\t\t\t\t"anchorX": {\n\t\t\t\t\t\t"expr": "signal(\'container.width\') > 300 ? \'end\' : \'middle\'",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "middle",\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"expr": "(signal(\'container.width\') / 2) - (signal(\'container.width\') > 300 ? 45 : 0)",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Relative Change Text",\n\t\t\t\t"encode": {\n\t\t\t\t\t"text": `${daterange:daterange|previousSuite|start|format("DD")|prepend("vs ")} - ${daterange:daterange|previousSuite|end|minus("second", 1)|format("DD")}`,\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"expr": "(signal(\'container.width\') / 2) - (signal(\'container.width\') > 300 ? 40 : 0)",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorX": {\n\t\t\t\t\t\t"expr": "signal(\'container.width\') > 300 ? \'start\' : \'middle\'",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "middle",\n\t\t\t\t\t"fontSize": 11,\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "signal(\'layout.top\') +  ( signal(\'layout.height\') / 2 ) + (signal(\'container.width\') > 300 ? 30 : 50) ",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "MetricName",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "current",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"fontSize": 11,\n\t\t\t\t\t"fill": "#757575",\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"signal": "container.width",\n\t\t\t\t\t\t"mult": 0.5,\n\t\t\t\t\t},\n\t\t\t\t\t"anchorX": "middle",\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "(signal(\'layout.top\') + signal(\'layout.height\') / 2) + 5",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "end",\n\t\t\t\t\t"text": "Videos",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			created_at: '2023-11-06T11:42:44.417Z',
			deleted_at: null,
			updated_at: '2023-11-06T11:42:44.417Z',
		},
		{
			id: 35919,
			board_id: 2197,
			type: 'markdown',
			layout: {
				h: 1,
				w: 4,
				x: 0,
				y: 26,
			},
			requests: null,
			config:
				'{\n\t"content": "**⬆ Tip:️**  It\'s important to **analyze the type of interactions your content receives**. Pay attention to increases in negative comments or reactions, as detected by automated Sentiment Analysis, as these indicators may suggest audience dissatisfaction with your messaging or brand.",\n\t"padding": "18px",\n}',
			created_at: '2023-11-06T11:42:44.417Z',
			deleted_at: null,
			updated_at: '2023-11-06T11:42:44.417Z',
		},
		{
			id: 35920,
			board_id: 2197,
			type: 'vision',
			layout: {
				h: 5,
				w: 2,
				x: 0,
				y: 21,
			},
			requests:
				'{\n\t"path": "/2/dev~omni-api/crossplatform/raw",\n\t"payload": {\n\t\t"accountId": ${string:acl_account_id},\n\t\t"userId": ${string:user_acl_id},\n\t\t"options": {\n\t\t\t"target_summary": true,\n\t\t\t"auth": true,\n\t\t\t"output": [\n\t\t\t\t"data",\n\t\t\t\t"raw",\n\t\t\t\t"payload",\n\t\t\t\t"query",\n\t\t\t],\n\t\t\t"explain": true,\n\t\t},\n\t\t\t\t// Request\n"target": [\n\t\t\t{\n\t\t\t\t"metric": "sentiment_manual_auto",\n\t\t\t\t"aggregation": "sum",\n\t\t\t},\n\t\t],\n\t\t"filters": [\n\t\t\t{\n\t\t\t\t"created_time": {\n\t\t\t\t\t"timeFrom": ${daterange:daterange|start|zone("utc", true)},\n\t\t\t\t\t"timeTo": ${daterange:daterange|end|zone("utc", true)|minus("second", 1)|endOf("day")},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"profile_id": {\n\t\t\t\t\t"values": ${array:fbProfiles|expr("input.map((p) => {if (typeof p !== \'string\') return p; const [network, value] = p.split(\'-\'); return {network, value};}).map(({value, network}) => ({id: value, platform: network}))")},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"origin": {\n\t\t\t\t\t"values": [\n\t\t\t\t\t\t"outgoing",\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"spam_post": {\n\t\t\t\t\t"value": false,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"deleted_post": {\n\t\t\t\t\t"value": false,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"dimensions": [\n\t\t\t{\n\t\t\t\t"type": "sentiment",\n\t\t\t\t"group": {\n\t\t\t\t\t"sort": {\n\t\t\t\t\t\t"key": "value",\n\t\t\t\t\t\t"order": "desc",\n\t\t\t\t\t},\n\t\t\t\t\t"limit": 8,\n\t\t\t\t\t"other": {\n\t\t\t\t\t\t"aggregation": "sum",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			config:
				'{\n\t"hammer": {\n\t\t"type": "category_treemap",\n\t\t"config": {\n\t\t\t"title": "Sentiment of comments by percentage",\n\t\t\t"daterange": "daterange",\n\t\t\t"metric": {\n\t\t\t\t"name": "Comments",\n\t\t\t},\n\t\t\t"dimension0": {\n\t\t\t\t"title": "Sentiment",\n\t\t\t\t"field": "dim0",\n\t\t\t\t"mapping": {\n\t\t\t\t\t"POSITIVE": "Positive",\n\t\t\t\t\t"NEGATIVE": "Negative",\n\t\t\t\t\t"NEUTRAL": "Neutral",\n\t\t\t\t},\n\t\t\t\t"colorMapping": {\n\t\t\t\t\t"Positive": "#0F9D58",\n\t\t\t\t\t"Neutral": "#A3A3A3",\n\t\t\t\t\t"Negative": "#FD2512",\n\t\t\t\t},\n\t\t\t},\n\t\t\t"tooltip": "The percentage distribution of sentiments (Positive, Negative, Neutral) for all comments on posts that were published during the selected date range ",\n\t\t\t"badges": [\n\t\t\t\t{\n\t\t\t\t\t"title": "Post Level",\n\t\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t},\n\t"header": {\n\t\t"title": "Sentiment of comments by percentage",\n\t\t"subtitle": ${daterange:daterange|humanize},\n\t\t"tooltip": "The percentage distribution of sentiments (Positive, Negative, Neutral) for all comments on posts that were published during the selected date range",\n\t\t"badges": [\n\t\t\t{\n\t\t\t\t"title": "Post Level",\n\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t},\n\t\t],\n\t},\n\t"container": {\n\t\t"padding": "0px",\n\t\t"visionPadding": "12px",\n\t},\n\t"vision": {\n\t\t"data": [\n\t\t\t{\n\t\t\t\t"name": "root",\n\t\t\t\t"format": "omni-full",\n\t\t\t\t"transform": [],\n\t\t\t\t"source": "$input",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "treemap",\n\t\t\t\t"format": "set",\n\t\t\t\t"transform": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "nest",\n\t\t\t\t\t\t"fields": [\n\t\t\t\t\t\t\t"dim0",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "treemap",\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"keepNodes": true,\n\t\t\t\t\t\t"paddingInner": {\n\t\t\t\t\t\t\t"signal": "layout.width",\n\t\t\t\t\t\t\t"mult": 0.002,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t"paddingOuter": {\n\t\t\t\t\t\t\t"signal": "layout.width",\n\t\t\t\t\t\t\t"mult": 0.001,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t"size": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t"signal": "container.width",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t"signal": "container.height",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "filter",\n\t\t\t\t\t\t"predicate": "datum.depth > 1",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "filter",\n\t\t\t\t\t\t"predicate": "datum.value > 0",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "map",\n\t\t\t\t\t\t"as": "dim0",\n\t\t\t\t\t\t"expr": "{\\"POSITIVE\\":\\"Positive\\",\\"NEGATIVE\\":\\"Negative\\",\\"NEUTRAL\\":\\"Neutral\\"}[datum[\'dim0\']] || datum[\'dim0\']",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"source": "root",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "target-summary",\n\t\t\t\t"format": {\n\t\t\t\t\t"type": "omni",\n\t\t\t\t\t"mode": "target-summary",\n\t\t\t\t\t"dimName": "common",\n\t\t\t\t\t"targetAsDim": true,\n\t\t\t\t},\n\t\t\t\t"source": "$input",\n\t\t\t},\n\t\t],\n\t\t"signals": [\n\t\t\t{\n\t\t\t\t"name": "labelThreshold",\n\t\t\t\t"value": {\n\t\t\t\t\t"expr": "signal(\'layout.width\') / 20",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"formats": [\n\t\t\t{\n\t\t\t\t"name": "value",\n\t\t\t\t"type": "expr",\n\t\t\t\t"expr": "(isNaN(value) || value === null) ? \'N/A\' : ( value < 10000 ? ((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \') : (new Intl.NumberFormat(\'en-US\', {notation: \'compact\',maximumFractionDigits: 2})).format(value))",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "expr",\n\t\t\t\t"name": "tooltip",\n\t\t\t\t"expr": "((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \')",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "number",\n\t\t\t\t"name": "percentage",\n\t\t\t\t"options": {\n\t\t\t\t\t"notation": "compact",\n\t\t\t\t\t"style": "percent",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"scales": [\n\t\t\t{\n\t\t\t\t"type": "ordinal",\n\t\t\t\t"name": "color",\n\t\t\t\t"domain": [\n\t\t\t\t\t"Positive",\n\t\t\t\t\t"Neutral",\n\t\t\t\t\t"Negative",\n\t\t\t\t],\n\t\t\t\t"range": [\n\t\t\t\t\t"#0F9D58",\n\t\t\t\t\t"#A3A3A3",\n\t\t\t\t\t"#FD2512",\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\t"marks": [\n\t\t\t{\n\t\t\t\t"type": "rect",\n\t\t\t\t"name": "Rectangle",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "treemap",\n\t\t\t\t},\n\t\t\t\t"tooltip": {\n\t\t\t\t\t"Sentiment": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t},\n\t\t\t\t\t"Comments": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "value",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"field": "x0",\n\t\t\t\t\t},\n\t\t\t\t\t"x2": {\n\t\t\t\t\t\t"field": "x1",\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"field": "y0",\n\t\t\t\t\t},\n\t\t\t\t\t"y2": {\n\t\t\t\t\t\t"expr": " datum[\'y1\']",\n\t\t\t\t\t},\n\t\t\t\t\t"radius": 7,\n\t\t\t\t\t"fill": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"scale": "color",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Captions",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "treemap",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"hidden": {\n\t\t\t\t\t\t"expr": "datum.x1-datum.x0 < 50 || datum.y1-datum.y0 < 50",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"field": "x0",\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "(datum.y0 + (datum.y1 - datum.y0) / 2) - 15",\n\t\t\t\t\t},\n\t\t\t\t\t"align": "center",\n\t\t\t\t\t"width": {\n\t\t\t\t\t\t"expr": "datum.x1-datum.x0",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "middle",\n\t\t\t\t\t"overflow": "ellipsis",\n\t\t\t\t\t"fontSize": 14,\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t},\n\t\t\t\t\t"fill": "#eceff1",\n\t\t\t\t\t"fontWeight": "bolder",\n\t\t\t\t\t"fontWeight": "bolder",\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Captions_%",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "treemap",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"hidden": {\n\t\t\t\t\t\t"expr": "datum.x1-datum.x0 < 50 || datum.y1-datum.y0 < 50",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"field": "x0",\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "(datum.y0 + (datum.y1 - datum.y0) / 2) + 15",\n\t\t\t\t\t},\n\t\t\t\t\t"align": "center",\n\t\t\t\t\t"width": {\n\t\t\t\t\t\t"expr": "datum.x1-datum.x0",\n\t\t\t\t\t},\n\t\t\t\t\t"fill": "#eceff1",\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"format": "percentage",\n\t\t\t\t\t\t"expr": "datum.value / dataset(\'target-summary\')[0].value",\n\t\t\t\t\t},\n\t\t\t\t\t"overflow": "ellipsis",\n\t\t\t\t\t"anchorY": "middle",\n\t\t\t\t\t"fontWeight": "bold",\n\t\t\t\t\t"fontSize": 12,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			created_at: '2023-11-06T11:42:44.417Z',
			deleted_at: null,
			updated_at: '2023-12-11T10:33:32.195Z',
		},
		{
			id: 35923,
			board_id: 2197,
			type: 'vision',
			layout: {
				h: 5,
				w: 2,
				x: 1,
				y: 6,
			},
			requests:
				'{\n\t"path": "/2/dev~omni-api/crossplatform/raw",\n\t"payload": {\n\t\t"accountId": ${string:acl_account_id},\n\t\t"userId": ${string:user_acl_id},\n\t\t"options": {\n\t\t\t"auth": true,\n\t\t\t"output": [\n\t\t\t\t"data",\n\t\t\t\t"raw",\n\t\t\t\t"payload",\n\t\t\t\t"query",\n\t\t\t],\n\t\t\t"explain": true,\n\t\t\t"toggles": [\n\t\t\t\t"tw_retweet_count",\n\t\t\t\t"PAID1719_fb_reels_enabled",\n\t\t\t],\n\t\t},\n\t\t"target": [\n\t\t\t{\n\t\t\t\t"metric": "interactions",\n\t\t\t\t"aggregation": "avg",\n\t\t\t},\n\t\t],\n\t\t"filters": [\n\t\t\t{\n\t\t\t\t"created_time": {\n\t\t\t\t\t"timeFrom": ${daterange:daterange|start|zone("utc", true)},\n\t\t\t\t\t"timeTo": ${daterange:daterange|end|zone("utc", true)|minus("second", 1)|endOf("day")},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"profile_id": {\n\t\t\t\t\t"values": ${fbProfiles|expr("input.map((p) => {if (typeof p !== \'string\') return p; const [network, value] = p.split(\'-\'); return {network, value};}).map(({value, network}) => ({id: value, platform: network}))")},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"origin": {\n\t\t\t\t\t"values": [\n\t\t\t\t\t\t"outgoing",\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"spam_post": {\n\t\t\t\t\t"value": false,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"deleted_post": {\n\t\t\t\t\t"value": false,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"dimensions": [\n\t\t\t{\n\t\t\t\t"type": "date",\n\t\t\t\t"aggregation": ${daterange:daterange|bucketUnit},\n\t\t\t},\n\t\t],\n\t},\n}',
			config:
				'{\n\t"hammer": {\n\t\t"type": "evolution_bar",\n\t\t"config": {\n\t\t\t"title": "Average interactions per content piece trend",\n\t\t\t"daterange": "daterange",\n\t\t\t"metric": {\n\t\t\t\t"name": "Avg. interactions per post",\n\t\t\t},\n\t\t\t"extras": {\n\t\t\t\t"textMarks": true,\n\t\t\t},\n\t\t\t"badges": [\n\t\t\t\t{\n\t\t\t\t\t"title": "Post Level",\n\t\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t\t},\n\t\t\t],\n\t\t\t"dimension0": {\n\t\t\t\t"title": "Date",\n\t\t\t\t"field": "dim0",\n\t\t\t\t"interactivity": {\n\t\t\t\t\t"signalUpdate": {\n\t\t\t\t\t\t"update": {\n\t\t\t\t\t\t\t"signal": "daterange",\n\t\t\t\t\t\t\t"value": {\n\t\t\t\t\t\t\t\t"expr": "dataset(\'root\')[datum.$index + 1] ? datum.dim0.toISO() + \'/\' + dataset(\'root\')[datum.$index + 1].dim0.toISO() : datum.dim0.toISO() + \'/P1D\'",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t"openAdditionalBoard": {\n\t\t\t\t\t\t"boardId": "{{global.boards.fbContent}}",\n\t\t\t\t\t\t"parameter_daterange": {\n\t\t\t\t\t\t\t"expr": "dataset(\'root\')[datum.$index + 1] ? datum.dim0.toISO() + \'/\' + dataset(\'root\')[datum.$index + 1].dim0.toISO() : datum.dim0.toISO() + \'/P1M\'",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t"variant": "narrow",\n\t\t\t\t\t\t"parameter_sort": {\n\t\t\t\t\t\t\t"expr": "{\\"type\\": \\"likeCount\\", \\"order\\": \\"desc\\"}",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t"fill": "#1877F2",\n\t\t\t"tooltip": "",\n\t\t},\n\t},\n\t"header": {\n\t\t"title": "Average interactions per content piece trend",\n\t\t"subtitle": `${daterange:daterange|humanize} • Aggregated by ${daterange:daterange|bucketUnit}`,\n\t\t"tooltip": "An overview of average interactions (reactions, comments, and shares) for posts published during the selected date range, segregated by publication date.\\n\\nAverage interactions is calculated as the sum of lifetime interactions for all posts, divided by the number of posts from the same period.",\n\t\t"badges": [\n\t\t\t{\n\t\t\t\t"title": "Interactive",\n\t\t\t\t"tooltip": "Click on a data point in the chart or graph to view the content associated with it",\n\t\t\t\t"variant": "active",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"title": "Post Level",\n\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t},\n\t\t],\n\t},\n\t"container": {\n\t\t"padding": "0px",\n\t\t"visionPadding": "12px",\n\t},\n\t"vision": {\n\t\t"data": [\n\t\t\t{\n\t\t\t\t"name": "root",\n\t\t\t\t"format": "omni-full",\n\t\t\t\t"transform": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "parse",\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"as": "datetime",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"source": "$input",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "minValue",\n\t\t\t\t"format": "set",\n\t\t\t\t"transform": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "sort",\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "slice",\n\t\t\t\t\t\t"start": 0,\n\t\t\t\t\t\t"end": 1,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"source": "root",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "maxValue",\n\t\t\t\t"format": "set",\n\t\t\t\t"transform": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "sort",\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"order": "desc",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "slice",\n\t\t\t\t\t\t"start": 0,\n\t\t\t\t\t\t"end": 1,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"source": "root",\n\t\t\t},\n\t\t],\n\t\t"formats": [\n\t\t\t{\n\t\t\t\t"name": "y",\n\t\t\t\t"type": "expr",\n\t\t\t\t"expr": "(isNaN(value) || value === null) ? \'N/A\' : ( value < 10000 ? ((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \') : (new Intl.NumberFormat(\'en-US\', {notation: \'compact\',maximumFractionDigits: 2})).format(value))",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "number",\n\t\t\t\t"name": "axisY",\n\t\t\t\t"options": {\n\t\t\t\t\t"notation": "compact",\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "expr",\n\t\t\t\t"name": "tooltip",\n\t\t\t\t"expr": "((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \')",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "x",\n\t\t\t\t"type": "datetime",\n\t\t\t\t"options": {\n\t\t\t\t\t"day": "numeric",\n\t\t\t\t\t"month": "short",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"scales": [\n\t\t\t{\n\t\t\t\t"type": "linear",\n\t\t\t\t"name": "y",\n\t\t\t\t"domain": {\n\t\t\t\t\t"data": "root",\n\t\t\t\t\t"fields": [\n\t\t\t\t\t\t"value",\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t"range": "height",\n\t\t\t\t"domainMin": 0,\n\t\t\t\t"range": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"signal": "layout.bottom",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"signal": "layout.top",\n\t\t\t\t\t\t"offset": 15,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "band",\n\t\t\t\t"name": "x",\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"range": "width",\n\t\t\t},\n\t\t],\n\t\t"axes": [\n\t\t\t{\n\t\t\t\t"orientation": "bottom",\n\t\t\t\t"scale": "x",\n\t\t\t\t"format": "x",\n\t\t\t\t"size": 25,\n\t\t\t\t"ticks": 7,\n\t\t\t\t"name": "Time range",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"orientation": "left",\n\t\t\t\t"scale": "y",\n\t\t\t\t"caption": "Avg. interactions per post",\n\t\t\t\t"format": "axisY",\n\t\t\t\t"name": "Avg. interactions per post",\n\t\t\t\t"size": 55,\n\t\t\t\t"grid": true,\n\t\t\t\t"ticks": 5,\n\t\t\t\t"encode": {\n\t\t\t\t\t"stroke": "none",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"marks": [\n\t\t\t{\n\t\t\t\t"type": "rect",\n\t\t\t\t"on": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"event": "click",\n\t\t\t\t\t\t"fire": "openAdditionalBoard",\n\t\t\t\t\t\t"args": {\n\t\t\t\t\t\t\t"boardId": 934,\n\t\t\t\t\t\t\t"parameter_daterange": {\n\t\t\t\t\t\t\t\t"expr": "dataset(\'root\')[datum.$index + 1] ? datum.dim0.toISO() + \'/\' + dataset(\'root\')[datum.$index + 1].dim0.toISO() : datum.dim0.toISO() + \'/P1M\'",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t"variant": "narrow",\n\t\t\t\t\t\t\t"parameter_sort": {\n\t\t\t\t\t\t\t\t"expr": "{\\"type\\": \\"likeCount\\", \\"order\\": \\"desc\\"}",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"name": "Columns",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"tooltip": {\n\t\t\t\t\t"Date": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"format": "x",\n\t\t\t\t\t},\n\t\t\t\t\t"Avg. interactions per post": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "tooltip",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"y2": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"scale": "y",\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"value": "0",\n\t\t\t\t\t\t"scale": "y",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t},\n\t\t\t\t\t"width": {\n\t\t\t\t\t\t"band": 1,\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t},\n\t\t\t\t\t"fill": "#1877F2",\n\t\t\t\t\t"fillOpacity": 1,\n\t\t\t\t\t"radius": 3,\n\t\t\t\t\t":hover": {\n\t\t\t\t\t\t"fillOpacity": 0.9,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Text",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"hidden": {\n\t\t\t\t\t\t"expr": "(dataset(\'maxValue\')[0].value === dataset(\'minValue\')[0].value) || dataset(\'root\').length < 5 || !datum.value || bandwidth(\'x\') < 40",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "datum.value < 0 ? scale(\'y\', datum.value) + 10 : scale(\'y\', datum.value) - 10",\n\t\t\t\t\t},\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "y",\n\t\t\t\t\t},\n\t\t\t\t\t"fill": {\n\t\t\t\t\t\t"expr": "datum.value === dataset(\'maxValue\')[0].value ? \'green\' : datum.value === dataset(\'minValue\')[0].value ? \'red\' : \'black\'",\n\t\t\t\t\t},\n\t\t\t\t\t"fontWeight": "bold",\n\t\t\t\t\t"width": {\n\t\t\t\t\t\t"band": 1,\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t},\n\t\t\t\t\t"align": "center",\n\t\t\t\t\t"anchorY": "middle",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			created_at: '2023-11-06T11:42:44.417Z',
			deleted_at: null,
			updated_at: '2023-11-06T11:42:44.417Z',
		},
		{
			id: 35924,
			board_id: 2197,
			type: 'vision',
			layout: {
				h: 5,
				w: 1,
				x: 3,
				y: 6,
			},
			requests:
				'{\n\t"path": "/2/dev~omni-api/crossplatform/raw",\n\t"payload": {\n\t\t"accountId": ${string:acl_account_id},\n\t\t"userId": ${string:user_acl_id},\n\t\t"options": {\n\t\t\t"auth": true,\n\t\t\t"output": [\n\t\t\t\t"data",\n\t\t\t\t"raw",\n\t\t\t\t"payload",\n\t\t\t\t"query",\n\t\t\t],\n\t\t\t"explain": true,\n\t\t},\n\t\t"target": [\n\t\t\t{\n\t\t\t\t"metric": "interactions",\n\t\t\t\t"aggregation": "avg",\n\t\t\t},\n\t\t],\n\t\t"filters": [\n\t\t\t{\n\t\t\t\t"created_time": {\n\t\t\t\t\t"timeFrom": ${daterange:daterange|start|zone("utc", true)},\n\t\t\t\t\t"timeTo": ${daterange:daterange|end|zone("utc", true)|minus("second", 1)|endOf("day")},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"profile_id": {\n\t\t\t\t\t"values": ${fbProfiles|expr("input.map((p) => {if (typeof p !== \'string\') return p; const [network, value] = p.split(\'-\'); return {network, value};}).map(({value, network}) => ({id: value, platform: network}))")},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"origin": {\n\t\t\t\t\t"values": [\n\t\t\t\t\t\t"outgoing",\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"spam_post": {\n\t\t\t\t\t"value": false,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"deleted_post": {\n\t\t\t\t\t"value": false,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"dimensions": [\n\t\t\t{\n\t\t\t\t"type": "media_type",\n\t\t\t\t"group": {\n\t\t\t\t\t"sort": {\n\t\t\t\t\t\t"key": "value",\n\t\t\t\t\t\t"order": "desc",\n\t\t\t\t\t},\n\t\t\t\t\t"limit": 8,\n\t\t\t\t\t"other": {\n\t\t\t\t\t\t"aggregation": "avg",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			config:
				'{\n\t"hammer": {\n\t\t"type": "category_rows",\n\t\t"config": {\n\t\t\t"title": "Average interactions per media type",\n\t\t\t"daterange": "daterange",\n\t\t\t"metric": {\n\t\t\t\t"name": "Average interactions per post",\n\t\t\t},\n\t\t\t"dimension0": {\n\t\t\t\t"field": "dim0",\n\t\t\t\t"title": "Media Type",\n\t\t\t\t"interactivity": {\n\t\t\t\t\t"openAdditionalBoard": {\n\t\t\t\t\t\t"boardId": "{{global.boards.fbContent}}",\n\t\t\t\t\t\t"variant": "narrow",\n\t\t\t\t\t\t"parameter_mediaTypes": {\n\t\t\t\t\t\t\t"expr": "[datum[\\"dim0\\"].toLowerCase()]",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t"mapping": "{{organic.dimension.media_type.mapping}}",\n\t\t\t\t"colorScale": [\n\t\t\t\t\t"#3F51B5",\n\t\t\t\t\t"#2196F3",\n\t\t\t\t\t"#00BCD4",\n\t\t\t\t\t"#009688",\n\t\t\t\t\t"#4CAF50",\n\t\t\t\t],\n\t\t\t},\n\t\t\t"tooltip": "The sum of interactions (reactions, comments, and shares) for posts published during the selected date range, divided by the number of posts",\n\t\t\t"badges": [\n\t\t\t\t{\n\t\t\t\t\t"title": "Post Level",\n\t\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t},\n\t"header": {\n\t\t"title": "Average interactions per media type",\n\t\t"subtitle": ${daterange:daterange|humanize},\n\t\t"tooltip": "The sum of interactions (reactions, comments, and shares) for posts published during the selected date range, divided by the number of posts ",\n\t\t"badges": [\n\t\t\t{\n\t\t\t\t"title": "Interactive",\n\t\t\t\t"tooltip": "Click on a data point in the chart or graph to view the content associated with it",\n\t\t\t\t"variant": "active",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"title": "Post Level",\n\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t},\n\t\t],\n\t},\n\t"container": {\n\t\t"padding": "0px",\n\t\t"visionPadding": "12px",\n\t},\n\t"vision": {\n\t\t"data": [\n\t\t\t{\n\t\t\t\t"name": "root",\n\t\t\t\t"format": "omni-full",\n\t\t\t\t"source": "$input",\n\t\t\t\t"transform": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "filter",\n\t\t\t\t\t\t"predicate": "datum[\'value\'] > 0",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "map",\n\t\t\t\t\t\t"as": "dim0",\n\t\t\t\t\t\t"expr": "{\\"album\\":\\"Album\\",\\"animated_gif\\":\\"Animated GIF\\",\\"status\\":\\"Status\\",\\"photo\\":\\"Photo\\",\\"video\\":\\"Video\\",\\"link\\":\\"Link\\",\\"note\\":\\"Note\\",\\"poll\\":\\"Poll\\",\\"offer\\":\\"Offer\\",\\"carousel\\":\\"Carousel\\",\\"reel\\":\\"Reel\\"}[datum[\'dim0\']] || datum[\'dim0\']",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\t"signals": [\n\t\t\t{\n\t\t\t\t"name": "top",\n\t\t\t\t"value": {\n\t\t\t\t\t"signal": "layout.top",\n\t\t\t\t\t"offset": 10,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"formats": [\n\t\t\t{\n\t\t\t\t"name": "y",\n\t\t\t\t"type": "expr",\n\t\t\t\t"expr": "(isNaN(value) || value === null) ? \'N/A\' : ( value < 10000 ? ((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \') : (new Intl.NumberFormat(\'en-US\', {notation: \'compact\',maximumFractionDigits: 2})).format(value))",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "number",\n\t\t\t\t"name": "axisX",\n\t\t\t\t"options": {\n\t\t\t\t\t"notation": "compact",\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "expr",\n\t\t\t\t"name": "tooltip",\n\t\t\t\t"expr": "((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \')",\n\t\t\t},\n\t\t],\n\t\t"scales": [\n\t\t\t{\n\t\t\t\t"type": "linear",\n\t\t\t\t"name": "x",\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "value",\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"range": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"signal": "layout.left",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"signal": "layout.right",\n\t\t\t\t\t\t"offset": {\n\t\t\t\t\t\t\t"signal": "layout.width",\n\t\t\t\t\t\t\t"mult": -0.1,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"domainMin": 0,\n\t\t\t\t"nice": true,\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "ordinal",\n\t\t\t\t"name": "color",\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"range": [\n\t\t\t\t\t"#3F51B5",\n\t\t\t\t\t"#2196F3",\n\t\t\t\t\t"#00BCD4",\n\t\t\t\t\t"#009688",\n\t\t\t\t\t"#4CAF50",\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "linear",\n\t\t\t\t"name": "y",\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "value",\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"range": "width",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "band",\n\t\t\t\t"name": "trackBand",\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"range": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"signal": "layout.top",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"signal": "layout.bottom",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\t"axes": [\n\t\t\t{\n\t\t\t\t"orientation": "bottom",\n\t\t\t\t"scale": "x",\n\t\t\t\t"size": 40,\n\t\t\t\t"caption": "Average interactions per post",\n\t\t\t\t"grid": true,\n\t\t\t\t"format": "axisX",\n\t\t\t\t"name": "Average interactions per post",\n\t\t\t\t"ticks": 5,\n\t\t\t\t"encode": {\n\t\t\t\t\t"stroke": "none",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"marks": [\n\t\t\t{\n\t\t\t\t"type": "rect",\n\t\t\t\t"name": "Bullet tracks",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"tooltip": {\n\t\t\t\t\t"__actions__": {\n\t\t\t\t\t\t"value": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t"id": "ctc",\n\t\t\t\t\t\t\t\t"icon": "contentAssociated",\n\t\t\t\t\t\t\t\t"text": "View associated content",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t"on": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"event": "click",\n\t\t\t\t\t\t"fire": "openAdditionalBoard",\n\t\t\t\t\t\t"args": {\n\t\t\t\t\t\t\t"boardId": 934,\n\t\t\t\t\t\t\t"variant": "narrow",\n\t\t\t\t\t\t\t"parameter_mediaTypes": {\n\t\t\t\t\t\t\t\t"expr": "[datum[\\"dim0\\"].toLowerCase()]",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"encode": {\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"signal": "layout.left",\n\t\t\t\t\t},\n\t\t\t\t\t"height": {\n\t\t\t\t\t\t"expr": "(bandwidth(\'trackBand\') * 1) - 30",\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"scale": "trackBand",\n\t\t\t\t\t},\n\t\t\t\t\t"x2": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t},\n\t\t\t\t\t"fill": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"scale": "color",\n\t\t\t\t\t},\n\t\t\t\t\t"radius": 4,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Labels",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"signal": "layout.left",\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "scale(\'trackBand\', datum[\'dim0\']) + (bandwidth(\'trackBand\')) - 20",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "start",\n\t\t\t\t\t"fontSize": 11,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Value labels",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "y",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t\t"offset": 8,\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "scale(\'trackBand\', datum[\'dim0\']) + ((bandwidth(\'trackBand\', 1) - 30)) * 0.5",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "middle",\n\t\t\t\t\t"fontSize": 11,\n\t\t\t\t\t"fontWeight": "bolder",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			created_at: '2023-11-06T11:42:44.417Z',
			deleted_at: null,
			updated_at: '2023-11-06T11:42:44.417Z',
		},
		{
			id: 35915,
			board_id: 2197,
			type: 'vision',
			layout: {
				h: 5,
				w: 2,
				x: 0,
				y: 1,
			},
			requests:
				'{\n\t"path": "/2/dev~omni-api/crossplatform/raw",\n\t"payload": {\n\t\t"accountId": ${string:acl_account_id},\n\t\t"userId": ${string:user_acl_id},\n\t\t"options": {\n\t\t\t"auth": true,\n\t\t},\n\t\t"target": [\n\t\t\t{\n\t\t\t\t"metric": "interactions_per_1k_fans",\n\t\t\t\t"aggregation": "avg",\n\t\t\t},\n\t\t],\n\t\t"filters": [\n\t\t\t{\n\t\t\t\t"created_time": {\n\t\t\t\t\t"timeFrom": ${daterange:daterange|start|zone("utc", true)},\n\t\t\t\t\t"timeTo": ${daterange:daterange|end|zone("utc", true)|minus("second", 1)|endOf("day")},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"profile_id": {\n\t\t\t\t\t"values": ${array:fbProfiles|expr("input.map((p) => {if (typeof p !== \'string\') return p; const [network, value] = p.split(\'-\'); return {network, value};}).map(({value, network}) => ({id: value, platform: network}))")},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"origin": {\n\t\t\t\t\t"values": [\n\t\t\t\t\t\t"outgoing",\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"spam_post": {\n\t\t\t\t\t"value": false,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"deleted_post": {\n\t\t\t\t\t"value": false,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"dimensions": [\n\t\t\t{\n\t\t\t\t"type": "media_type",\n\t\t\t\t"group": {\n\t\t\t\t\t"sort": {\n\t\t\t\t\t\t"key": "value",\n\t\t\t\t\t\t"order": "desc",\n\t\t\t\t\t},\n\t\t\t\t\t"limit": 8,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			config:
				'{\n\t// "hammer": {\n\t// \t"type": "category_rows",\n\t// \t"config": {\n\t// \t\t"title": "Most engaging media types",\n\t// \t\t"daterange": "daterange",\n\t// \t\t"metric": {\n\t// \t\t\t"name": "Interactions per 1K followers",\n\t// \t\t},\n\t// \t\t"dimension0": {\n\t// \t\t\t"field": "dim0",\n\t// \t\t\t"title": "Media Type",\n\t// \t\t\t"interactivity": {\n\t// \t\t\t\t"openAdditionalBoard": {\n\t// \t\t\t\t\t"boardId": "{{global.boards.fbContent}}",\n\t// \t\t\t\t\t"variant": "narrow",\n\t// \t\t\t\t\t"parameter_mediaTypes": {\n\t// \t\t\t\t\t\t"expr": "[datum[\\"dim0\\"].toLowerCase()]",\n\t// \t\t\t\t\t},\n\t// \t\t\t\t},\n\t// \t\t\t},\n\t// \t\t\t"mapping": "{{organic.dimension.media_type.mapping}}",\n\t// \t\t\t"colorScale": [\n\t// \t\t\t\t"#3F51B5",\n\t// \t\t\t\t"#2196F3",\n\t// \t\t\t\t"#00BCD4",\n\t// \t\t\t\t"#009688",\n\t// \t\t\t\t"#4CAF50",\n\t// \t\t\t],\n\t// \t\t},\n\t// \t\t"tooltip": "The sum of interactions (reactions, comments, and shares) for posts published during the selected date range, divided by the number of followers a profile has at the time of a post, and multiplied by 1000. Posts are segregated by media type (image, video, link, etc.).",\n\t// \t\t"badges": [\n\t// \t\t\t{\n\t// \t\t\t\t"title": "Post Level",\n\t// \t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t// \t\t\t},\n\t// \t\t],\n\t// \t},\n\t// },\n\t"header": {\n\t\t"title": "Most engaging media types",\n\t\t"subtitle": ${daterange:daterange|humanize},\n\t\t"tooltip": "The sum of interactions (reactions, comments, and shares) for posts published during the selected date range, divided by the number of followers a profile has at the time of a post, and multiplied by 1000. Posts are segregated by media type (image, video, link, etc.).",\n\t\t"badges": [\n\t\t\t{\n\t\t\t\t"title": "Interactive",\n\t\t\t\t"tooltip": "Click on a data point in the chart or graph to view the content associated with it",\n\t\t\t\t"variant": "active",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"title": "Post Level",\n\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t},\n\t\t],\n\t},\n\t"container": {\n\t\t"padding": "0px",\n\t\t"visionPadding": "12px",\n\t},\n\t"vision": {\n\t\t"data": [\n\t\t\t{\n\t\t\t\t"name": "root",\n\t\t\t\t"format": "omni-full",\n\t\t\t\t"source": "$input",\n\t\t\t\t"transform": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "filter",\n\t\t\t\t\t\t"predicate": "datum[\'value\'] > 0",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "map",\n\t\t\t\t\t\t"as": "dim0",\n\t\t\t\t\t\t"expr": "{\\"album\\":\\"Album\\",\\"animated_gif\\":\\"Animated GIF\\",\\"status\\":\\"Status\\",\\"photo\\":\\"Photo\\",\\"video\\":\\"Video\\",\\"link\\":\\"Link\\",\\"note\\":\\"Note\\",\\"poll\\":\\"Poll\\",\\"offer\\":\\"Offer\\",\\"carousel\\":\\"Carousel\\",\\"reel\\":\\"Reel\\"}[datum[\'dim0\']] || datum[\'dim0\']",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\t"signals": [\n\t\t\t{\n\t\t\t\t"name": "top",\n\t\t\t\t"value": {\n\t\t\t\t\t"signal": "layout.top",\n\t\t\t\t\t"offset": 10,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"formats": [\n\t\t\t{\n\t\t\t\t"name": "y",\n\t\t\t\t"type": "expr",\n\t\t\t\t"expr": "(isNaN(value) || value === null) ? \'N/A\' : ( value < 10000 ? ((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \') : (new Intl.NumberFormat(\'en-US\', {notation: \'compact\',maximumFractionDigits: 2})).format(value))",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "number",\n\t\t\t\t"name": "axisX",\n\t\t\t\t"options": {\n\t\t\t\t\t"notation": "compact",\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "expr",\n\t\t\t\t"name": "tooltip",\n\t\t\t\t"expr": "((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \')",\n\t\t\t},\n\t\t],\n\t\t"scales": [\n\t\t\t{\n\t\t\t\t"type": "linear",\n\t\t\t\t"name": "x",\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "value",\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"range": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"signal": "layout.left",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"signal": "layout.right",\n\t\t\t\t\t\t"offset": {\n\t\t\t\t\t\t\t"signal": "layout.width",\n\t\t\t\t\t\t\t"mult": -0.1,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"domainMin": 0,\n\t\t\t\t"nice": true,\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "ordinal",\n\t\t\t\t"name": "color",\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"range": [\n\t\t\t\t\t"#3F51B5",\n\t\t\t\t\t"#2196F3",\n\t\t\t\t\t"#00BCD4",\n\t\t\t\t\t"#009688",\n\t\t\t\t\t"#4CAF50",\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "linear",\n\t\t\t\t"name": "y",\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "value",\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"range": "width",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "band",\n\t\t\t\t"name": "trackBand",\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"range": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"signal": "layout.top",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"signal": "layout.bottom",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\t"axes": [\n\t\t\t{\n\t\t\t\t"orientation": "bottom",\n\t\t\t\t"scale": "x",\n\t\t\t\t"size": 40,\n\t\t\t\t"caption": "Interactions per 1K followers",\n\t\t\t\t"grid": true,\n\t\t\t\t"format": "axisX",\n\t\t\t\t"name": "Interactions per 1K followers",\n\t\t\t\t"ticks": 5,\n\t\t\t\t"encode": {\n\t\t\t\t\t"stroke": "none",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"marks": [\n\t\t\t{\n\t\t\t\t"type": "rect",\n\t\t\t\t"name": "Bullet tracks",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"tooltip": {\n\t\t\t\t\t"__actions__": {\n\t\t\t\t\t\t"value": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t"id": "ctc",\n\t\t\t\t\t\t\t\t"icon": "contentAssociated",\n\t\t\t\t\t\t\t\t"text": "View associated content",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t"on": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"event": "click",\n\t\t\t\t\t\t"fire": "openAdditionalBoard",\n\t\t\t\t\t\t"args": {\n\t\t\t\t\t\t\t"boardId": 934,\n\t\t\t\t\t\t\t"variant": "narrow",\n\t\t\t\t\t\t\t"parameter_mediaTypes": {\n\t\t\t\t\t\t\t\t"expr": "[datum[\\"dim0\\"].toLowerCase()]",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"encode": {\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"signal": "layout.left",\n\t\t\t\t\t},\n\t\t\t\t\t"height": {\n\t\t\t\t\t\t"expr": "(bandwidth(\'trackBand\') * 1) - 30",\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"scale": "trackBand",\n\t\t\t\t\t},\n\t\t\t\t\t"x2": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t},\n\t\t\t\t\t"fill": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"scale": "color",\n\t\t\t\t\t},\n\t\t\t\t\t"radius": 4,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Labels",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"signal": "layout.left",\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "scale(\'trackBand\', datum[\'dim0\']) + (bandwidth(\'trackBand\')) - 20",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "start",\n\t\t\t\t\t"fontSize": 11,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Value labels",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "y",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t\t"offset": 8,\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "scale(\'trackBand\', datum[\'dim0\']) + ((bandwidth(\'trackBand\', 1) - 30)) * 0.5",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "middle",\n\t\t\t\t\t"fontSize": 11,\n\t\t\t\t\t"fontWeight": "bolder",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			created_at: '2023-11-06T11:42:44.417Z',
			deleted_at: null,
			updated_at: '2023-11-06T11:46:29.396Z',
		},
		{
			id: 35912,
			board_id: 2197,
			type: 'vision',
			layout: {
				h: 5,
				w: 2,
				x: 2,
				y: 1,
			},
			requests:
				'{\n\t"path": "/2/dev~omni-api/crossplatform/raw",\n\t"payload": {\n\t\t"accountId": ${string:acl_account_id},\n\t\t"userId": ${string:user_acl_id},\n\t\t"options": {\n\t\t\t"auth": true,\n\t\t\t"output": [\n\t\t\t\t"data",\n\t\t\t\t"raw",\n\t\t\t\t"payload",\n\t\t\t\t"query",\n\t\t\t],\n\t\t\t"explain": true,\n\t\t},\n\t\t\t\t// Request\n"target": [\n\t\t\t{\n\t\t\t\t"metric": "page_posts",\n\t\t\t\t"aggregation": "sum",\n\t\t\t},\n\t\t],\n\t\t"filters": [\n\t\t\t{\n\t\t\t\t"created_time": {\n\t\t\t\t\t"timeFrom": ${daterange:daterange|start|zone("utc", true)},\n\t\t\t\t\t"timeTo": ${daterange:daterange|end|zone("utc", true)|minus("second", 1)|endOf("day")},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"profile_id": {\n\t\t\t\t\t"values": ${array:fbProfiles|expr("input.map((p) => {if (typeof p !== \'string\') return p; const [network, value] = p.split(\'-\'); return {network, value};}).map(({value, network}) => ({id: value, platform: network}))")},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"origin": {\n\t\t\t\t\t"values": [\n\t\t\t\t\t\t"outgoing",\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"content_type": {\n\t\t\t\t\t"values": [\n\t\t\t\t\t\t"post",\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"spam_post": {\n\t\t\t\t\t"value": false,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"deleted_post": {\n\t\t\t\t\t"value": false,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"dimensions": [\n\t\t\t{\n\t\t\t\t"type": "date",\n\t\t\t\t"aggregation": ${daterange:daterange|bucketUnit},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "media_type",\n\t\t\t\t"group": {\n\t\t\t\t\t"sort": {\n\t\t\t\t\t\t"key": "value",\n\t\t\t\t\t\t"order": "desc",\n\t\t\t\t\t},\n\t\t\t\t\t"limit": 8,\n\t\t\t\t\t"other": {\n\t\t\t\t\t\t"aggregation": "sum",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			config:
				'{\n\t"hammer": {\n\t\t"type": "evolution_stacked_bar",\n\t\t"config": {\n\t\t\t"title": "Content by media type trend",\n\t\t\t"daterange": "daterange",\n\t\t\t"dimension0": {\n\t\t\t\t"field": "dim0",\n\t\t\t\t"title": "Date",\n\t\t\t},\n\t\t\t"dimension1": {\n\t\t\t\t"field": "dim1",\n\t\t\t\t"title": "Media Type",\n\t\t\t\t"mapping": "{{organic.dimension.media_type.mapping}}",\n\t\t\t\t"colorScale": "{{global.default.colorScale}}",\n\t\t\t},\n\t\t\t"metric": {\n\t\t\t\t"name": "Number of posts",\n\t\t\t},\n\t\t\t"tooltip": "The distribution of different media types (e.g. images, videos, links) for the set of content published during the selected date range, segregated by media type and publication date",\n\t\t\t"badges": [\n\t\t\t\t{\n\t\t\t\t\t"title": "Post Level",\n\t\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t},\n\t"header": {\n\t\t"title": "Content by media type trend",\n\t\t"subtitle": `${daterange:daterange|humanize} • Aggregated by ${daterange:daterange|bucketUnit}`,\n\t\t"tooltip": "The distribution of different media types (e.g. images, videos, links) for the set of content published during the selected date range, segregated by media type and publication date",\n\t\t"badges": [\n\t\t\t{\n\t\t\t\t"title": "Post Level",\n\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t},\n\t\t],\n\t},\n\t"container": {\n\t\t"padding": "0px",\n\t\t"visionPadding": "12px",\n\t},\n\t"vision": {\n\t\t"data": [\n\t\t\t{\n\t\t\t\t"name": "root",\n\t\t\t\t"format": "omni-full",\n\t\t\t\t"transform": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "parse",\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"as": "datetime",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"source": "$input",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "stacked",\n\t\t\t\t"format": "set",\n\t\t\t\t"transform": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "filter",\n\t\t\t\t\t\t"predicate": "datum[\'value\'] != 0 && datum[\'value\'] != null",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "map",\n\t\t\t\t\t\t"as": "dim1",\n\t\t\t\t\t\t"expr": "{\\"album\\":\\"Album\\",\\"animated_gif\\":\\"Animated GIF\\",\\"status\\":\\"Status\\",\\"photo\\":\\"Photo\\",\\"video\\":\\"Video\\",\\"link\\":\\"Link\\",\\"note\\":\\"Note\\",\\"poll\\":\\"Poll\\",\\"offer\\":\\"Offer\\",\\"carousel\\":\\"Carousel\\",\\"reel\\":\\"Reel\\"}[datum[\'dim1\']] || datum[\'dim1\']",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "stack",\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"groupBy": [\n\t\t\t\t\t\t\t"dim0",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"source": "root",\n\t\t\t},\n\t\t],\n\t\t"formats": [\n\t\t\t{\n\t\t\t\t"name": "y",\n\t\t\t\t"type": "expr",\n\t\t\t\t"expr": "(isNaN(value) || value === null) ? \'N/A\' : ( value < 10000 ? ((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \') : (new Intl.NumberFormat(\'en-US\', {notation: \'compact\',maximumFractionDigits: 2})).format(value))",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "number",\n\t\t\t\t"name": "axisY",\n\t\t\t\t"options": {\n\t\t\t\t\t"notation": "compact",\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "expr",\n\t\t\t\t"name": "tooltip",\n\t\t\t\t"expr": "((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \')",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "x",\n\t\t\t\t"type": "datetime",\n\t\t\t\t"options": {\n\t\t\t\t\t"day": "numeric",\n\t\t\t\t\t"month": "short",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"scales": [\n\t\t\t{\n\t\t\t\t"type": "linear",\n\t\t\t\t"name": "y",\n\t\t\t\t"domain": {\n\t\t\t\t\t"data": "stacked",\n\t\t\t\t\t"fields": [\n\t\t\t\t\t\t"value0",\n\t\t\t\t\t\t"value1",\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t"range": "height",\n\t\t\t\t"domainMin": 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "band",\n\t\t\t\t"name": "x",\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t"data": "root",\n\t\t\t\t},\n\t\t\t\t"range": "width",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "ordinal",\n\t\t\t\t"name": "color",\n\t\t\t\t"range": [\n\t\t\t\t\t"#3f51b5",\n\t\t\t\t\t"#2196f3",\n\t\t\t\t\t"#00bcd4",\n\t\t\t\t\t"#009688",\n\t\t\t\t\t"#4caf50",\n\t\t\t\t\t"#8bc34a",\n\t\t\t\t\t"#cddc39",\n\t\t\t\t\t"#ffcc02",\n\t\t\t\t\t"#ff9800",\n\t\t\t\t\t"#f43636",\n\t\t\t\t\t"#b01e1e",\n\t\t\t\t\t"#795548",\n\t\t\t\t\t"#e91e63",\n\t\t\t\t\t"#cd3497",\n\t\t\t\t\t"#9c27b0",\n\t\t\t\t\t"#622cc2",\n\t\t\t\t],\n\t\t\t\t"domain": {\n\t\t\t\t\t"field": "dim1",\n\t\t\t\t\t"data": "stacked",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"axes": [\n\t\t\t{\n\t\t\t\t"orientation": "bottom",\n\t\t\t\t"scale": "x",\n\t\t\t\t"format": "x",\n\t\t\t\t"size": 25,\n\t\t\t\t"ticks": 7,\n\t\t\t\t"name": "Date",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"orientation": "left",\n\t\t\t\t"scale": "y",\n\t\t\t\t"caption": "Number of posts",\n\t\t\t\t"format": "axisY",\n\t\t\t\t"name": "Number of posts",\n\t\t\t\t"grid": true,\n\t\t\t\t"size": 55,\n\t\t\t\t"ticks": 5,\n\t\t\t\t"encode": {\n\t\t\t\t\t"stroke": "none",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"legends": [\n\t\t\t{\n\t\t\t\t"orientation": "bottom",\n\t\t\t\t"name": "Number of posts",\n\t\t\t\t"scale": "color",\n\t\t\t\t"encode:symbol": {\n\t\t\t\t\t"fill": {\n\t\t\t\t\t\t"scale": "color",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"marks": [\n\t\t\t{\n\t\t\t\t"type": "rect",\n\t\t\t\t"name": "Columns",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "stacked",\n\t\t\t\t},\n\t\t\t\t"tooltip": {\n\t\t\t\t\t"Date": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"format": "x",\n\t\t\t\t\t},\n\t\t\t\t\t"Media Type": {\n\t\t\t\t\t\t"field": "dim1",\n\t\t\t\t\t},\n\t\t\t\t\t"Number of content pieces": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "tooltip",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"field": "value0",\n\t\t\t\t\t\t"scale": "y",\n\t\t\t\t\t\t"offset": -1,\n\t\t\t\t\t},\n\t\t\t\t\t"y2": {\n\t\t\t\t\t\t"field": "value1",\n\t\t\t\t\t\t"scale": "y",\n\t\t\t\t\t\t"offset": 1,\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t},\n\t\t\t\t\t"width": {\n\t\t\t\t\t\t"band": 1,\n\t\t\t\t\t\t"scale": "x",\n\t\t\t\t\t},\n\t\t\t\t\t"fill": {\n\t\t\t\t\t\t"field": "dim1",\n\t\t\t\t\t\t"scale": "color",\n\t\t\t\t\t},\n\t\t\t\t\t"fillOpacity": 1,\n\t\t\t\t\t"radius": 3,\n\t\t\t\t\t":hover": {\n\t\t\t\t\t\t"fillOpacity": 1,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			created_at: '2023-11-06T11:42:44.417Z',
			deleted_at: null,
			updated_at: '2023-12-11T10:24:11.181Z',
		},
		{
			id: 35922,
			board_id: 2197,
			type: 'vision',
			layout: {
				h: 5,
				w: 2,
				x: 2,
				y: 21,
			},
			requests:
				'{\n\t"path": "/2/dev~omni-api/crossplatform/raw",\n\t"payload": {\n\t\t"accountId": ${string:acl_account_id},\n\t\t"userId": ${string:user_acl_id},\n\t\t"options": {\n\t\t\t"target_summary": true,\n\t\t\t"auth": true,\n\t\t\t"output": [\n\t\t\t\t"data",\n\t\t\t\t"raw",\n\t\t\t\t"payload",\n\t\t\t\t"query",\n\t\t\t],\n\t\t\t"explain": true,\n\t\t},\n\t\t\t\t// Request\n"target": [\n\t\t\t{\n\t\t\t\t"metric": "reactions",\n\t\t\t\t"aggregation": "sum",\n\t\t\t},\n\t\t],\n\t\t"filters": [\n\t\t\t{\n\t\t\t\t"created_time": {\n\t\t\t\t\t"timeFrom": ${daterange:daterange|start|zone("utc", true)},\n\t\t\t\t\t"timeTo": ${daterange:daterange|end|zone("utc", true)|minus("second", 1)|endOf("day")},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"profile_id": {\n\t\t\t\t\t"values": ${array:fbProfiles|expr("input.map((p) => {if (typeof p !== \'string\') return p; const [network, value] = p.split(\'-\'); return {network, value};}).map(({value, network}) => ({id: value, platform: network}))")},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"origin": {\n\t\t\t\t\t"values": [\n\t\t\t\t\t\t"outgoing",\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"spam_post": {\n\t\t\t\t\t"value": false,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"deleted_post": {\n\t\t\t\t\t"value": false,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"dimensions": [\n\t\t\t{\n\t\t\t\t"type": "reaction_type",\n\t\t\t\t"group": {\n\t\t\t\t\t"sort": {\n\t\t\t\t\t\t"key": "value",\n\t\t\t\t\t\t"order": "desc",\n\t\t\t\t\t},\n\t\t\t\t\t"limit": 8,\n\t\t\t\t\t"other": {\n\t\t\t\t\t\t"aggregation": "sum",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			config:
				'{\n\t"hammer": {\n\t\t"type": "category_treemap",\n\t\t"config": {\n\t\t\t"title": "Reactions by percentage",\n\t\t\t"daterange": "daterange",\n\t\t\t"metric": {\n\t\t\t\t"name": "Reactions",\n\t\t\t},\n\t\t\t"dimension0": {\n\t\t\t\t"title": "Reaction Type",\n\t\t\t\t"field": "dim0",\n\t\t\t\t"mapping": {\n\t\t\t\t\t"anger": "😡",\n\t\t\t\t\t"thankful": "🙏",\n\t\t\t\t\t"haha": "😆",\n\t\t\t\t\t"like": "👍",\n\t\t\t\t\t"love": "♥️",\n\t\t\t\t\t"sorry": "😢",\n\t\t\t\t\t"pride": "🏳️‍🌈",\n\t\t\t\t\t"wow": "😯",\n\t\t\t\t},\n\t\t\t\t"colorMapping": {\n\t\t\t\t\t"😡": "#F43636",\n\t\t\t\t\t"👍": "#3F51B5",\n\t\t\t\t\t"♥️": "#E91E63",\n\t\t\t\t\t"😆": "#FFE23B",\n\t\t\t\t\t"🏳️‍🌈": "#FF9800",\n\t\t\t\t\t"😢": "#2196F3",\n\t\t\t\t\t"🙏": "#CD3497",\n\t\t\t\t\t"😯": "#9C27B0",\n\t\t\t\t},\n\t\t\t},\n\t\t\t"tooltip": "The percentage distribution of reactions (Like, Love, Care, Haha, Wow, Sad, and Angry) for the set of content published during the selected date range. Data is segregated by reaction type. This metric does not count reactions to reshared content.",\n\t\t\t"badges": [\n\t\t\t\t{\n\t\t\t\t\t"title": "Post Level",\n\t\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t},\n\t"header": {\n\t\t"title": "Reactions by percentage",\n\t\t"subtitle": ${daterange:daterange|humanize},\n\t\t"tooltip": "The percentage distribution of reactions (Like, Love, Care, Haha, Wow, Sad, and Angry) for the set of content published during the selected date range. Data is segregated by reaction type. This metric does not count reactions to reshared content.",\n\t\t"badges": [\n\t\t\t{\n\t\t\t\t"title": "Post Level",\n\t\t\t\t"tooltip": "Post-level metrics show data for posts published during a selected date range. Regardless of when an engagement happened, all post data is aggregated and displayed for the day the post was published. This means it can include data about engagement that occurred even after the selected date range.",\n\t\t\t},\n\t\t],\n\t},\n\t"container": {\n\t\t"padding": "0px",\n\t\t"visionPadding": "12px",\n\t},\n\t"vision": {\n\t\t"data": [\n\t\t\t{\n\t\t\t\t"name": "root",\n\t\t\t\t"format": "omni-full",\n\t\t\t\t"transform": [],\n\t\t\t\t"source": "$input",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "treemap",\n\t\t\t\t"format": "set",\n\t\t\t\t"transform": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "nest",\n\t\t\t\t\t\t"fields": [\n\t\t\t\t\t\t\t"dim0",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "treemap",\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"keepNodes": true,\n\t\t\t\t\t\t"paddingInner": {\n\t\t\t\t\t\t\t"signal": "layout.width",\n\t\t\t\t\t\t\t"mult": 0.002,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t"paddingOuter": {\n\t\t\t\t\t\t\t"signal": "layout.width",\n\t\t\t\t\t\t\t"mult": 0.001,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t"size": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t"signal": "container.width",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t"signal": "container.height",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "filter",\n\t\t\t\t\t\t"predicate": "datum.depth > 1",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "filter",\n\t\t\t\t\t\t"predicate": "datum.value > 0",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"type": "map",\n\t\t\t\t\t\t"as": "dim0",\n\t\t\t\t\t\t"expr": "{\\"anger\\":\\"😡\\",\\"thankful\\":\\"🙏\\",\\"haha\\":\\"😆\\",\\"like\\":\\"👍\\",\\"love\\":\\"♥️\\",\\"sorry\\":\\"😢\\",\\"pride\\":\\"🏳️‍🌈\\",\\"wow\\":\\"😯\\"}[datum[\'dim0\']] || datum[\'dim0\']",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t"source": "root",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"name": "target-summary",\n\t\t\t\t"format": {\n\t\t\t\t\t"type": "omni",\n\t\t\t\t\t"mode": "target-summary",\n\t\t\t\t\t"dimName": "common",\n\t\t\t\t\t"targetAsDim": true,\n\t\t\t\t},\n\t\t\t\t"source": "$input",\n\t\t\t},\n\t\t],\n\t\t"signals": [\n\t\t\t{\n\t\t\t\t"name": "labelThreshold",\n\t\t\t\t"value": {\n\t\t\t\t\t"expr": "signal(\'layout.width\') / 20",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"formats": [\n\t\t\t{\n\t\t\t\t"name": "value",\n\t\t\t\t"type": "expr",\n\t\t\t\t"expr": "(isNaN(value) || value === null) ? \'N/A\' : ( value < 10000 ? ((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \') : (new Intl.NumberFormat(\'en-US\', {notation: \'compact\',maximumFractionDigits: 2})).format(value))",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "expr",\n\t\t\t\t"name": "tooltip",\n\t\t\t\t"expr": "((new Intl.NumberFormat(\'en-US\', {maximumFractionDigits: Math.max(Math.ceil(3-Math.log10(Math.max(Math.abs(value),1))),0)})).format(value)).replaceAll(\',\', \' \')",\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "number",\n\t\t\t\t"name": "percentage",\n\t\t\t\t"options": {\n\t\t\t\t\t"notation": "compact",\n\t\t\t\t\t"style": "percent",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t"scales": [\n\t\t\t{\n\t\t\t\t"type": "ordinal",\n\t\t\t\t"name": "color",\n\t\t\t\t"domain": [\n\t\t\t\t\t"😡",\n\t\t\t\t\t"👍",\n\t\t\t\t\t"♥️",\n\t\t\t\t\t"😆",\n\t\t\t\t\t"🏳️‍🌈",\n\t\t\t\t\t"😢",\n\t\t\t\t\t"🙏",\n\t\t\t\t\t"😯",\n\t\t\t\t],\n\t\t\t\t"range": [\n\t\t\t\t\t"#F43636",\n\t\t\t\t\t"#3F51B5",\n\t\t\t\t\t"#E91E63",\n\t\t\t\t\t"#FFE23B",\n\t\t\t\t\t"#FF9800",\n\t\t\t\t\t"#2196F3",\n\t\t\t\t\t"#CD3497",\n\t\t\t\t\t"#9C27B0",\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\t"marks": [\n\t\t\t{\n\t\t\t\t"type": "rect",\n\t\t\t\t"name": "Rectangle",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "treemap",\n\t\t\t\t},\n\t\t\t\t"tooltip": {\n\t\t\t\t\t"Reaction Type": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t},\n\t\t\t\t\t"Reactions": {\n\t\t\t\t\t\t"field": "value",\n\t\t\t\t\t\t"format": "value",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"field": "x0",\n\t\t\t\t\t},\n\t\t\t\t\t"x2": {\n\t\t\t\t\t\t"field": "x1",\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"field": "y0",\n\t\t\t\t\t},\n\t\t\t\t\t"y2": {\n\t\t\t\t\t\t"expr": " datum[\'y1\']",\n\t\t\t\t\t},\n\t\t\t\t\t"radius": 7,\n\t\t\t\t\t"fill": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t\t"scale": "color",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Captions",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "treemap",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"hidden": {\n\t\t\t\t\t\t"expr": "datum.x1-datum.x0 < 50 || datum.y1-datum.y0 < 50",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"field": "x0",\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "(datum.y0 + (datum.y1 - datum.y0) / 2) - 15",\n\t\t\t\t\t},\n\t\t\t\t\t"align": "center",\n\t\t\t\t\t"width": {\n\t\t\t\t\t\t"expr": "datum.x1-datum.x0",\n\t\t\t\t\t},\n\t\t\t\t\t"anchorY": "middle",\n\t\t\t\t\t"overflow": "ellipsis",\n\t\t\t\t\t"fontSize": 14,\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"field": "dim0",\n\t\t\t\t\t},\n\t\t\t\t\t"fill": "#eceff1",\n\t\t\t\t\t"fontWeight": "bolder",\n\t\t\t\t\t"fontWeight": "bolder",\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t"type": "text",\n\t\t\t\t"name": "Captions_%",\n\t\t\t\t"source": {\n\t\t\t\t\t"data": "treemap",\n\t\t\t\t},\n\t\t\t\t"encode": {\n\t\t\t\t\t"hidden": {\n\t\t\t\t\t\t"expr": "datum.x1-datum.x0 < 50 || datum.y1-datum.y0 < 50",\n\t\t\t\t\t},\n\t\t\t\t\t"x": {\n\t\t\t\t\t\t"field": "x0",\n\t\t\t\t\t},\n\t\t\t\t\t"y": {\n\t\t\t\t\t\t"expr": "(datum.y0 + (datum.y1 - datum.y0) / 2) + 15",\n\t\t\t\t\t},\n\t\t\t\t\t"align": "center",\n\t\t\t\t\t"width": {\n\t\t\t\t\t\t"expr": "datum.x1-datum.x0",\n\t\t\t\t\t},\n\t\t\t\t\t"fill": "#eceff1",\n\t\t\t\t\t"text": {\n\t\t\t\t\t\t"format": "percentage",\n\t\t\t\t\t\t"expr": "datum.value / dataset(\'target-summary\')[0].value",\n\t\t\t\t\t},\n\t\t\t\t\t"overflow": "ellipsis",\n\t\t\t\t\t"anchorY": "middle",\n\t\t\t\t\t"fontWeight": "bold",\n\t\t\t\t\t"fontSize": 12,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}',
			created_at: '2023-11-06T11:42:44.417Z',
			deleted_at: null,
			updated_at: '2023-12-11T10:28:33.064Z',
		},
	],
	fields: [
		{
			id: 35910,
			label: 'Facebook Owned Profiles',
			name: 'fbProfiles',
			type: 'list',
		},
		{
			id: 35917,
			label: 'daterange',
			name: 'daterange',
			type: 'daterange',
		},
	],
}
export default board2197
